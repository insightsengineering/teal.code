<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="code_dependency" timestamp="2023-10-05T10:37:49Z" hostname="1e1b2f55dc14" tests="50" skipped="1" failures="0" errors="25" time="0.913">
    <testcase time="0.0609999999999999" classname="code_dependency" name="get_code_extract_code_of_a_binding_from_a_simple_code_put_in_a_character"/>
    <testcase time="0.034" classname="code_dependency" name="get_code_extract_code_of_a_binding_from_a_simple_code_put_in_a_character">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:6:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "a"), "a &lt;- 1") at test-code_dependency.R:6:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "a")
 5. └─teal.code::get_code(q, names = "a")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.09" classname="code_dependency" name="get_code_extracts_the_code_of_a_binding_from_a_code_put_in_an_expression"/>
    <testcase time="0.005" classname="code_dependency" name="get_code_extracts_the_code_of_a_binding_from_a_code_put_in_an_expression">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:22:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "a"), "a &lt;- 1") at test-code_dependency.R:22:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "a")
 5. └─teal.code::get_code(q, names = "a")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0419999999999999" classname="code_dependency" name="get_code_extracts_the_code_of_a_binding_from_a_code_put_in_a_language"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="get_code_extracts_the_code_of_a_binding_from_a_code_put_in_a_language">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:33:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "b"), "b &lt;- 2") at test-code_dependency.R:33:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0269999999999999" classname="code_dependency" name="get_code_warns_if_binding_doesn_t_exist_in_a_code">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:44:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_warning(get_code(q, names = "c")) at test-code_dependency.R:44:2
 2. │ └─testthat:::quasi_capture(...)
 3. │   ├─testthat (local) .capture(...)
 4. │   │ └─base::withCallingHandlers(...)
 5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 6. ├─teal.code::get_code(q, names = "c")
 7. └─teal.code::get_code(q, names = "c")
 8.   └─teal.code:::get_code_dependency(object, names)
 9.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.024" classname="code_dependency" name="get_code_extracts_code_of_a_parent_binding_but_only_those_evaluated_before_coocurence"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="get_code_extracts_code_of_a_parent_binding_but_only_those_evaluated_before_coocurence">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:56:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:56:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0249999999999999" classname="code_dependency" name="get_code_extracts_code_of_a_parent_binding_if_used_as_an_arg_in_fun_call"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="get_code_extracts_code_of_a_parent_binding_if_used_as_an_arg_in_fun_call">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:68:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:68:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0229999999999999" classname="code_dependency" name="get_code_is_possible_to_output_the_code_for_multiple_objects"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="get_code_is_possible_to_output_the_code_for_multiple_objects">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:80:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:80:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = c("a", "b"))
 5. └─teal.code::get_code(q, names = c("a", "b"))
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0259999999999998" classname="code_dependency" name="get_code_can_t_extract_the_code_when_no_assign_operator"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="get_code_can_t_extract_the_code_when_no_assign_operator">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:91:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "b"), "b &lt;- b + 2") at test-code_dependency.R:91:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0229999999999999" classname="code_dependency" name="_effect_tag_indicate_affected_object_if_object_is_assigned_anywhere_in_a_code"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="_effect_tag_indicate_affected_object_if_object_is_assigned_anywhere_in_a_code">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:102:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:102:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.028" classname="code_dependency" name="get_code_can_extract_the_code_when_function_creates_an_object_which_is_used_only_on_rhs"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="get_code_can_extract_the_code_when_function_creates_an_object_which_is_used_only_on_rhs">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:113:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:113:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "iris2")
 5. └─teal.code::get_code(q, names = "iris2")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0230000000000001" classname="code_dependency" name="get_code_can_extract_the_code_when_using_"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="get_code_can_extract_the_code_when_using_">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:124:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:124:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.026" classname="code_dependency" name="get_code_detects_every_assign_calls_even_if_not_evaluated"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="get_code_detects_every_assign_calls_even_if_not_evaluated">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:135:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:135:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0230000000000001" classname="code_dependency" name="_effect_cause_to_return_this_line_for_affected_binding"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="_effect_cause_to_return_this_line_for_affected_binding">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:155:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:155:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0250000000000001" classname="code_dependency" name="_effect_returns_this_line_for_affected_binding_even_if_object_is_not_specificed_created_in_the_same_eval_code"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="_effect_returns_this_line_for_affected_binding_even_if_object_is_not_specificed_created_in_the_same_eval_code">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:169:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:169:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0230000000000001" classname="code_dependency" name="_effect_returns_this_line_for_affected_binding_if_object_is_not_specificed_in_the_same_eval_code_but_it_existed_already_in_the_qenv_env"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="_effect_returns_this_line_for_affected_binding_if_object_is_not_specificed_in_the_same_eval_code_but_it_existed_already_in_the_qenv_env">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:185:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:185:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "a")
 5. └─teal.code::get_code(q, names = "a")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0249999999999999" classname="code_dependency" name="lines_affecting_parent_evaluated_after_co_occurrence_are_not_included_in_get_code_output"/>
    <testcase time="0.004" classname="code_dependency" name="lines_affecting_parent_evaluated_after_co_occurrence_are_not_included_in_get_code_output">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:201:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:201:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.024" classname="code_dependency" name="lines_affecting_parent_evaluated_after_co_occurrence_are_not_included_in_get_code_output_when_using_effect"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="lines_affecting_parent_evaluated_after_co_occurrence_are_not_included_in_get_code_output_when_using_effect">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:217:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:217:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "a")
 5. └─teal.code::get_code(q, names = "a")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0250000000000001" classname="code_dependency" name="_effect_gets_extracted_if_it_s_a_side_effect_on_a_dependent_object"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="_effect_gets_extracted_if_it_s_a_side_effect_on_a_dependent_object">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:240:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:240:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "classes")
 5. └─teal.code::get_code(q, names = "classes")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.024" classname="code_dependency" name="_effect_gets_extracted_if_it_s_a_side_effect_on_a_dependent_object_of_a_dependent_object"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="_effect_gets_extracted_if_it_s_a_side_effect_on_a_dependent_object_of_a_dependent_object">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:260:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:260:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "classes")
 5. └─teal.code::get_code(q, names = "classes")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0419999999999998" classname="code_dependency" name="get_code_returns_the_same_class_when_names_is_specified_and_when_not"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="get_code_returns_the_same_class_when_names_is_specified_and_when_not">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:271:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "a"), get_code(q)) at test-code_dependency.R:271:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "a")
 5. └─teal.code::get_code(q, names = "a")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.024" classname="code_dependency" name="get_code_returns_single_lines_for_code_put_in_inside_expressions"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="get_code_returns_single_lines_for_code_put_in_inside_expressions">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:287:5')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "a"), "a &lt;- 1") at test-code_dependency.R:287:4
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "a")
 5. └─teal.code::get_code(q, names = "a")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0250000000000001" classname="code_dependency" name="get_code_ignores_occurrence_in_function_definition"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="get_code_ignores_occurrence_in_function_definition">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:303:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:303:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "foo")
 5. └─teal.code::get_code(q, names = "foo")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.0230000000000001" classname="code_dependency" name="get_code_ignores_effect_of_the_object_which_occurs_in_a_function_definition"/>
    <testcase time="0.0069999999999999" classname="code_dependency" name="get_code_ignores_effect_of_the_object_which_occurs_in_a_function_definition">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:315:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "b"), c("b &lt;- 2")) at test-code_dependency.R:315:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.024" classname="code_dependency" name="get_code_detects_occurrence_of_the_function_object"/>
    <testcase time="0.00499999999999989" classname="code_dependency" name="get_code_detects_occurrence_of_the_function_object">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:328:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(...) at test-code_dependency.R:328:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "b")
 5. └─teal.code::get_code(q, names = "b")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
    <testcase time="0.018" classname="code_dependency" name="Can_t_detect_occurrence_of_function_definition_when_a_formal_is_named_the_same_as_a_function">
      <skipped message="Reason: This does not return foo definition YET! ('test-code_dependency.R:337:5')"/>
    </testcase>
    <testcase time="0.02" classname="code_dependency" name="get_code_understands_usage_and_do_not_treat_rhs_of_as_objects_only_lhs_"/>
    <testcase time="0.00500000000000012" classname="code_dependency" name="get_code_understands_usage_and_do_not_treat_rhs_of_as_objects_only_lhs_">
      <error type="error" message="Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute. ('test-code_dependency.R:361:3')">Error in `code_dependency(parsed_code, symbols)`: The 'expression' code input does not contain 'srcref' attribute.
Backtrace:
    ▆
 1. ├─testthat::expect_identical(get_code(q, names = "x"), c("x &lt;- data.frame(a = 1:3)")) at test-code_dependency.R:361:2
 2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 4. ├─teal.code::get_code(q, names = "x")
 5. └─teal.code::get_code(q, names = "x")
 6.   └─teal.code:::get_code_dependency(object, names)
 7.     └─teal.code:::code_dependency(parsed_code, symbols)</error>
    </testcase>
  </testsuite>
  <testsuite name="qenv_concat" timestamp="2023-10-05T10:37:50Z" hostname="1e1b2f55dc14" tests="12" skipped="0" failures="0" errors="0" time="0.069">
    <testcase time="0.03" classname="qenv_concat" name="Concatenate_two_identical_qenvs_outputs"/>
    <testcase time="0.00099999999999989" classname="qenv_concat" name="Concatenate_two_identical_qenvs_outputs"/>
    <testcase time="0.00500000000000012" classname="qenv_concat" name="Concatenate_two_independent_qenvs_results_in_object_having_combined_code_and_environments"/>
    <testcase time="0.00099999999999989" classname="qenv_concat" name="Concatenate_two_independent_qenvs_results_in_object_having_combined_code_and_environments"/>
    <testcase time="0.00100000000000011" classname="qenv_concat" name="Concatenate_two_independent_qenvs_results_in_object_having_combined_code_and_environments"/>
    <testcase time="0.0089999999999999" classname="qenv_concat" name="Concatenate_qenvs_results_with_the_same_variable_the_RHS_has_priority"/>
    <testcase time="0.00600000000000001" classname="qenv_concat" name="Concatenate_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.00100000000000011" classname="qenv_concat" name="Concatenate_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.002" classname="qenv_concat" name="Concatenate_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.002" classname="qenv_concat" name="Concatenate_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.00499999999999989" classname="qenv_concat" name="Concatenate_two_independent_qenvs_with_warnings_results_in_object_having_combined_warnings"/>
    <testcase time="0.00600000000000001" classname="qenv_concat" name="Concatenate_two_independent_qenvs_with_messages_results_in_object_having_combined_messages"/>
  </testsuite>
  <testsuite name="qenv_constructor" timestamp="2023-10-05T10:37:50Z" hostname="1e1b2f55dc14" tests="25" skipped="0" failures="0" errors="0" time="0.129">
    <testcase time="0.018" classname="qenv_constructor" name="constructor_returns_qenv_if_nothing_is_specified"/>
    <testcase time="0.00099999999999989" classname="qenv_constructor" name="constructor_returns_qenv_if_nothing_is_specified"/>
    <testcase time="0.00100000000000011" classname="qenv_constructor" name="constructor_returns_qenv_if_nothing_is_specified"/>
    <testcase time="0.00099999999999989" classname="qenv_constructor" name="constructor_returns_qenv_if_nothing_is_specified"/>
    <testcase time="0.00100000000000011" classname="qenv_constructor" name="constructor_returns_qenv_if_nothing_is_specified"/>
    <testcase time="0.00099999999999989" classname="qenv_constructor" name="constructor_returns_qenv_if_nothing_is_specified"/>
    <testcase time="0.00500000000000012" classname="qenv_constructor" name="parent_of_qenv_environment_is_the_parent_of_.GlobalEnv"/>
    <testcase time="0.00099999999999989" classname="qenv_constructor" name="parent_of_qenv_environment_is_the_parent_of_.GlobalEnv"/>
    <testcase time="0.00100000000000011" classname="qenv_constructor" name="parent_of_qenv_environment_is_the_parent_of_.GlobalEnv"/>
    <testcase time="0.0069999999999999" classname="qenv_constructor" name="provided_environment_is_copied_so_the_change_of_the_environment_won_t_affect_qenv"/>
    <testcase time="0.0390000000000001" classname="qenv_constructor" name="new_qenv_fails_if_code_is_provided_but_not_environment"/>
    <testcase time="0.00499999999999989" classname="qenv_constructor" name="new_qenv_works_with_code_being_character"/>
    <testcase time="0.00100000000000011" classname="qenv_constructor" name="new_qenv_works_with_code_being_character"/>
    <testcase time="0.004" classname="qenv_constructor" name="new_qenv_works_with_code_being_character"/>
    <testcase time="0.004" classname="qenv_constructor" name="new_qenv_works_with_code_being_expression"/>
    <testcase time="0.002" classname="qenv_constructor" name="new_qenv_works_with_code_being_expression"/>
    <testcase time="0.00299999999999989" classname="qenv_constructor" name="new_qenv_works_with_code_being_expression"/>
    <testcase time="0.00500000000000012" classname="qenv_constructor" name="new_qenv_works_with_code_being_quoted_expression"/>
    <testcase time="0.00099999999999989" classname="qenv_constructor" name="new_qenv_works_with_code_being_quoted_expression"/>
    <testcase time="0.00700000000000012" classname="qenv_constructor" name="new_qenv_works_with_code_being_quoted_expression"/>
    <testcase time="0.004" classname="qenv_constructor" name="new_qenv_works_with_code_being_length_1"/>
    <testcase time="0.002" classname="qenv_constructor" name="new_qenv_works_with_code_being_length_1"/>
    <testcase time="0.0089999999999999" classname="qenv_constructor" name="new_qenv_allows_to_pass_irreproducible_env_and_code"/>
    <testcase time="0.00500000000000012" classname="qenv_constructor" name="Initializing_qenv_with_code_only_creates_corresponding_warnings_and_messages_slots"/>
    <testcase time="0.00099999999999989" classname="qenv_constructor" name="Initializing_qenv_with_code_only_creates_corresponding_warnings_and_messages_slots"/>
  </testsuite>
  <testsuite name="qenv_eval_code" timestamp="2023-10-05T10:37:50Z" hostname="1e1b2f55dc14" tests="27" skipped="0" failures="1" errors="0" time="0.14">
    <testcase time="0.00900000000000012" classname="qenv_eval_code" name="eval_code_evaluates_the_code_in_the_qenvs_environment"/>
    <testcase time="0.00399999999999978" classname="qenv_eval_code" name="eval_code_doesn_t_have_access_to_environment_where_it_s_called"/>
    <testcase time="0.00500000000000012" classname="qenv_eval_code" name="_env_in_qenv_is_always_a_sibling_of_.GlobalEnv"/>
    <testcase time="0.00099999999999989" classname="qenv_eval_code" name="_env_in_qenv_is_always_a_sibling_of_.GlobalEnv"/>
    <testcase time="0.00100000000000011" classname="qenv_eval_code" name="_env_in_qenv_is_always_a_sibling_of_.GlobalEnv"/>
    <testcase time="0.0109999999999999" classname="qenv_eval_code" name="library_have_to_be_called_separately_before_using_function_from_package"/>
    <testcase time="0.014" classname="qenv_eval_code" name="library_have_to_be_called_separately_before_using_function_from_package"/>
    <testcase time="0.00700000000000012" classname="qenv_eval_code" name="eval_code_works_with_character"/>
    <testcase time="0.002" classname="qenv_eval_code" name="eval_code_works_with_character"/>
    <testcase time="0.00499999999999989" classname="qenv_eval_code" name="eval_code_works_with_expression"/>
    <testcase time="0.00100000000000011" classname="qenv_eval_code" name="eval_code_works_with_expression"/>
    <testcase time="0.00499999999999989" classname="qenv_eval_code" name="eval_code_works_with_quoted"/>
    <testcase time="0.00100000000000011" classname="qenv_eval_code" name="eval_code_works_with_quoted"/>
    <testcase time="0.00499999999999989" classname="qenv_eval_code" name="eval_code_works_with_quoted_code_block"/>
    <testcase time="0.00100000000000011" classname="qenv_eval_code" name="eval_code_works_with_quoted_code_block"/>
    <testcase time="0.0149999999999999" classname="qenv_eval_code" name="eval_code_fails_with_unquoted_expression">
      <failure type="failure" message="`eval_code(new_qenv(), a &lt;- b)` threw an error with unexpected message. ('test-qenv_eval_code.R:86:3')">`eval_code(new_qenv(), a &lt;- b)` threw an error with unexpected message.
Expected match: "object 'b' not found"
Actual message: "unable to find an inherited method for function 'eval_code' for signature '\"qenv\", \"numeric\"'"
Backtrace:
    ▆
 1. ├─testthat::expect_error(eval_code(new_qenv(), a &lt;- b), "object 'b' not found") at test-qenv_eval_code.R:86:2
 2. │ └─testthat:::quasi_capture(...)
 3. │   ├─testthat (local) .capture(...)
 4. │   │ └─base::withCallingHandlers(...)
 5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 6. └─teal.code::eval_code(new_qenv(), a &lt;- b)
 7.   └─methods (local) `&lt;fn&gt;`(`&lt;list&gt;`, `&lt;stndrdGn&gt;`, `&lt;env&gt;`)</failure>
    </testcase>
    <testcase time="0.0229999999999999" classname="qenv_eval_code" name="an_error_when_calling_eval_code_returns_a_qenv.error_object_which_has_message_and_trace"/>
    <testcase time="0.00200000000000022" classname="qenv_eval_code" name="an_error_when_calling_eval_code_returns_a_qenv.error_object_which_has_message_and_trace"/>
    <testcase time="0.00099999999999989" classname="qenv_eval_code" name="an_error_when_calling_eval_code_returns_a_qenv.error_object_which_has_message_and_trace"/>
    <testcase time="0.00800000000000001" classname="qenv_eval_code" name="a_warning_when_calling_eval_code_returns_a_qenv_object_which_has_warnings"/>
    <testcase time="0.00099999999999989" classname="qenv_eval_code" name="a_warning_when_calling_eval_code_returns_a_qenv_object_which_has_warnings"/>
    <testcase time="0.00500000000000034" classname="qenv_eval_code" name="eval_code_with_a_vector_of_code_produces_one_warning_element_per_code_element"/>
    <testcase time="0.00499999999999989" classname="qenv_eval_code" name="a_message_when_calling_eval_code_returns_a_qenv_object_which_has_messages"/>
    <testcase time="0.00099999999999989" classname="qenv_eval_code" name="a_message_when_calling_eval_code_returns_a_qenv_object_which_has_messages"/>
    <testcase time="0.00499999999999989" classname="qenv_eval_code" name="eval_code_returns_a_qenv_object_with_empty_messages_and_warnings_when_none_are_returned"/>
    <testcase time="0.00100000000000033" classname="qenv_eval_code" name="eval_code_returns_a_qenv_object_with_empty_messages_and_warnings_when_none_are_returned"/>
    <testcase time="0.00099999999999989" classname="qenv_eval_code" name="eval_code_returns_a_qenv_object_with_empty_messages_and_warnings_when_none_are_returned"/>
  </testsuite>
  <testsuite name="qenv_get_code" timestamp="2023-10-05T10:37:51Z" hostname="1e1b2f55dc14" tests="5" skipped="0" failures="0" errors="0" time="0.124">
    <testcase time="0.0789999999999997" classname="qenv_get_code" name="get_code_returns_code_character_by_default_of_qenv_object"/>
    <testcase time="0.0330000000000004" classname="qenv_get_code" name="get_code_returns_code_elements_being_code_blocks_as_character_1_"/>
    <testcase time="0.00599999999999978" classname="qenv_get_code" name="get_code_returns_expression_of_qenv_object_if_deparse_FALSE"/>
    <testcase time="0.00499999999999989" classname="qenv_get_code" name="get_code_called_with_qenv.error_returns_error_with_trace_in_error_message"/>
    <testcase time="0.00100000000000033" classname="qenv_get_code" name="get_code_called_with_qenv.error_returns_error_with_trace_in_error_message"/>
  </testsuite>
  <testsuite name="qenv_get_var" timestamp="2023-10-05T10:37:51Z" hostname="1e1b2f55dc14" tests="8" skipped="0" failures="0" errors="0" time="0.045">
    <testcase time="0.0129999999999999" classname="qenv_get_var" name="get_var_and_return_error_if_object_is_qenv.error"/>
    <testcase time="0.00599999999999978" classname="qenv_get_var" name="get_var_and_return_error_if_object_is_qenv.error"/>
    <testcase time="0.00499999999999989" classname="qenv_get_var" name="get_var_and_return_object_from_qenv_environment"/>
    <testcase time="0.00200000000000022" classname="qenv_get_var" name="get_var_and_return_object_from_qenv_environment"/>
    <testcase time="0.0110000000000001" classname="qenv_get_var" name="get_var_and_return_NULL_if_object_not_in_qenv_environment"/>
    <testcase time="0.00199999999999978" classname="qenv_get_var" name="get_var_and_return_NULL_if_object_not_in_qenv_environment"/>
    <testcase time="0.004" classname="qenv_get_var" name="get_var_and_return_NULL_if_object_not_in_qenv_environment"/>
    <testcase time="0.00200000000000022" classname="qenv_get_var" name="get_var_and_return_NULL_if_object_not_in_qenv_environment"/>
  </testsuite>
  <testsuite name="qenv_get_warnings" timestamp="2023-10-05T10:37:51Z" hostname="1e1b2f55dc14" tests="7" skipped="0" failures="0" errors="0" time="0.171">
    <testcase time="0.036" classname="qenv_get_warnings" name="get_warnings_accepts_a_qenv_object_and_returns_character"/>
    <testcase time="0.0109999999999997" classname="qenv_get_warnings" name="get_warnings_accepts_a_qenv.error_object_and_returns_NULL"/>
    <testcase time="0.00600000000000023" classname="qenv_get_warnings" name="get_warnings_accepts_a_NULL_object_and_returns_NULL"/>
    <testcase time="0.00800000000000001" classname="qenv_get_warnings" name="get_warnings_accepts_a_qenv_object_with_no_warning_and_returns_NULL"/>
    <testcase time="0.0649999999999999" classname="qenv_get_warnings" name="get_warnings_accepts_a_qenv_object_with_2_warnings"/>
    <testcase time="0.02" classname="qenv_get_warnings" name="get_warnings_accepts_a_qenv_object_with_a_single_eval_code_returning_2_warnings"/>
    <testcase time="0.0249999999999999" classname="qenv_get_warnings" name="get_warnings_accepts_a_qenv_object_with_1_warning_eval_code_and_1_no_warning_eval_code"/>
  </testsuite>
  <testsuite name="qenv_join" timestamp="2023-10-05T10:37:51Z" hostname="1e1b2f55dc14" tests="40" skipped="0" failures="0" errors="0" time="0.155">
    <testcase time="0.012" classname="qenv_join" name="Joining_two_identical_qenvs_outputs_the_same_object"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="Joining_two_identical_qenvs_outputs_the_same_object"/>
    <testcase time="0.00100000000000033" classname="qenv_join" name="Joining_two_identical_qenvs_outputs_the_same_object"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="Joining_two_identical_qenvs_outputs_the_same_object"/>
    <testcase time="0.00800000000000001" classname="qenv_join" name="Joining_two_independent_qenvs_results_in_object_having_combined_code_and_environments"/>
    <testcase time="0.004" classname="qenv_join" name="Joining_two_independent_qenvs_results_in_object_having_combined_code_and_environments"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="Joining_two_independent_qenvs_results_in_object_having_combined_code_and_environments"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="Joining_two_independent_qenvs_results_in_object_having_combined_code_and_environments"/>
    <testcase time="0.00800000000000001" classname="qenv_join" name="Joined_qenv_does_not_duplicate_common_code"/>
    <testcase time="0.00100000000000033" classname="qenv_join" name="Joined_qenv_does_not_duplicate_common_code"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="Joined_qenv_does_not_duplicate_common_code"/>
    <testcase time="0.00599999999999978" classname="qenv_join" name="Not_able_to_join_two_qenvs_if_any_of_the_shared_objects_changed"/>
    <testcase time="0.00499999999999989" classname="qenv_join" name="Not_able_to_join_two_qenvs_if_any_of_the_shared_objects_changed"/>
    <testcase time="0.00800000000000001" classname="qenv_join" name="join_does_not_duplicate_code_but_adds_only_extra_code"/>
    <testcase time="0.00100000000000033" classname="qenv_join" name="join_does_not_duplicate_code_but_adds_only_extra_code"/>
    <testcase time="0.00299999999999967" classname="qenv_join" name="join_does_not_duplicate_code_but_adds_only_extra_code"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="join_does_not_duplicate_code_but_adds_only_extra_code"/>
    <testcase time="0.0089999999999999" classname="qenv_join" name="Not_possible_to_join_qenvs_which_share_some_code_when_one_of_the_shared_object_was_modified"/>
    <testcase time="0.0100000000000002" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_don_t_share_any_code_identified_by_id_"/>
    <testcase time="0.00199999999999978" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_don_t_share_any_code_identified_by_id_"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_don_t_share_any_code_identified_by_id_"/>
    <testcase time="0.00100000000000033" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_don_t_share_any_code_identified_by_id_"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_don_t_share_any_code_identified_by_id_"/>
    <testcase time="0.00800000000000001" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_share_common_initial_qenv_elements"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_share_common_initial_qenv_elements"/>
    <testcase time="0.00200000000000022" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_share_common_initial_qenv_elements"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_share_common_initial_qenv_elements"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="qenv_objects_are_mergeable_if_they_share_common_initial_qenv_elements"/>
    <testcase time="0.00600000000000023" classname="qenv_join" name="qenv_objects_aren_t_mergeable_if_they_share_common_qenv_elements_proceeded_with_some_other_code"/>
    <testcase time="0.00499999999999989" classname="qenv_join" name="qenv_objects_aren_t_mergeable_if_they_share_common_qenv_elements_proceeded_with_some_other_code"/>
    <testcase time="0.00599999999999978" classname="qenv_join" name="qenv_objects_are_not_mergable_if_they_have_multiple_common_streaks"/>
    <testcase time="0.00900000000000034" classname="qenv_join" name="qenv_objects_are_not_mergable_if_they_have_multiple_common_streaks"/>
    <testcase time="0.00499999999999989" classname="qenv_join" name="joining_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.00199999999999978" classname="qenv_join" name="joining_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.00200000000000022" classname="qenv_join" name="joining_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="joining_with_a_qenv.error_object_returns_the_qenv.error_object"/>
    <testcase time="0.00800000000000001" classname="qenv_join" name="Joining_two_independent_qenvs_with_warnings_results_in_object_having_combined_warnings"/>
    <testcase time="0.00099999999999989" classname="qenv_join" name="Joining_two_independent_qenvs_with_warnings_results_in_object_having_combined_warnings"/>
    <testcase time="0.00800000000000001" classname="qenv_join" name="Joining_two_independent_qenvs_with_messages_results_in_object_having_combined_messages"/>
    <testcase time="0.00200000000000022" classname="qenv_join" name="Joining_two_independent_qenvs_with_messages_results_in_object_having_combined_messages"/>
  </testsuite>
  <testsuite name="utils" timestamp="2023-10-05T10:37:51Z" hostname="1e1b2f55dc14" tests="20" skipped="0" failures="0" errors="0" time="0.095">
    <testcase time="0.012" classname="utils" name="remove_enclosing_curly_braces_errors_if_argument_is_not_character"/>
    <testcase time="0.00699999999999967" classname="utils" name="remove_enclosing_curly_braces_returns_argument_if_it_has_length_0"/>
    <testcase time="0.004" classname="utils" name="remove_enclosing_curly_braces_only_splits_string_on_if_no_enclosing_curly_brackets"/>
    <testcase time="0.00100000000000033" classname="utils" name="remove_enclosing_curly_braces_only_splits_string_on_if_no_enclosing_curly_brackets"/>
    <testcase time="0.00099999999999989" classname="utils" name="remove_enclosing_curly_braces_only_splits_string_on_if_no_enclosing_curly_brackets"/>
    <testcase time="0.00099999999999989" classname="utils" name="remove_enclosing_curly_braces_only_splits_string_on_if_no_enclosing_curly_brackets"/>
    <testcase time="0.004" classname="utils" name="remove_enclosing_curly_braces_removes_enclosing_curly_brackets"/>
    <testcase time="0.00100000000000033" classname="utils" name="remove_enclosing_curly_braces_removes_enclosing_curly_brackets"/>
    <testcase time="0.00099999999999989" classname="utils" name="remove_enclosing_curly_braces_removes_enclosing_curly_brackets"/>
    <testcase time="0.00199999999999978" classname="utils" name="remove_enclosing_curly_braces_removes_enclosing_curly_brackets"/>
    <testcase time="0.004" classname="utils" name="remove_enclosing_curly_braces_concatenates_input_character_vector"/>
    <testcase time="0.00100000000000033" classname="utils" name="remove_enclosing_curly_braces_concatenates_input_character_vector"/>
    <testcase time="0.00099999999999989" classname="utils" name="remove_enclosing_curly_braces_concatenates_input_character_vector"/>
    <testcase time="0.00499999999999989" classname="utils" name="remove_enclosing_curly_braces_containing_enclosing_brackets_and_only_blank_lines_returns_blank_lines"/>
    <testcase time="0.00099999999999989" classname="utils" name="remove_enclosing_curly_braces_containing_enclosing_brackets_and_only_blank_lines_returns_blank_lines"/>
    <testcase time="0.00500000000000034" classname="utils" name="remove_enclosing_curly_braces_removes_4_spaces_from_lines_enclosed_by_brackets_if_they_exist"/>
    <testcase time="0.00099999999999989" classname="utils" name="remove_enclosing_curly_braces_removes_4_spaces_from_lines_enclosed_by_brackets_if_they_exist"/>
    <testcase time="0.00599999999999978" classname="utils" name="dev_suppress_function_supress_printing_plot_on_IDE"/>
    <testcase time="0.00300000000000011" classname="utils" name="dev_suppress_function_supress_printing_plot_on_IDE"/>
    <testcase time="0.0340000000000003" classname="utils" name="format_expression_concatenates_results_of_remove_enclosing_curly_braces"/>
  </testsuite>
</testsuites>
