[{"path":"https://insightsengineering.github.io/teal.code/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"NEST. Author, maintainer. Nikolas Burkoff. Author. Mahmoud Hallal. Author. Dawid Kaledkowski. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Pawel Rucki. Author. Junlue Zhao. Author. Tadeusz Lewandowski. Contributor. Roche. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.code/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"NEST, Burkoff N, Hallal M, Kaledkowski D, Nasinski M, Pagacz K, Rucki P, Zhao J (2022). teal.code: Code storage execution class teal applications. R package version 0.1.0.9001.","code":"@Manual{,   title = {teal.code: Code storage and execution class for teal applications},   author = {{NEST} and Nikolas Burkoff and Mahmoud Hallal and Dawid Kaledkowski and Maciej Nasinski and Konrad Pagacz and Pawel Rucki and Junlue Zhao},   year = {2022},   note = {R package version 0.1.0.9001}, }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Code storage and execution class for teal applications","text":"teal.code R library providing tools store code execution environment associated . features include: * storing character literals code, * storing execution environment, * swapping execution environment stored code, * evaluating parts stored code, * means execute code -throw guarantee (errors demoted warnings messages stored retrieval). teal.code also ships shiny module helps inspect stored code well messages, warnings error messages resulting evaluation via shiny web application.","code":""},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Code storage and execution class for teal applications","text":"repository requires personal access token install see creating using PAT. set , install latest released version package run: might need manually install package dependencies installing package without dependencies = FALSE argument install_github may produce error.","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"insightsengineering/teal.code@*release\", dependencies = FALSE)"},{"path":"https://insightsengineering.github.io/teal.code/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunk_call.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Code chunk - including expression and variables — chunk_call","text":"R6Class generator object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunk_call.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Code chunk - including expression and variables — chunk_call","text":"new(expression = NULL) Create object setting expression field needs type call. eval(envir = parent.frame() Evaluation code chunk. value evaluated chunk substitution variables environment values. get_eval_info() Returns list 5 elements: code, evaluation information, messages information, warnings information errors information. get_rcode(envir = parent.frame() code chunk string R-Code returned. is_ok() Get information execution went right. info() Derive slots class carries. Slots private can just derived info function return list. info_msg() Get formatted string evaluated code caught warnings errors. get_errors() Get string errors caught evaluation. get_warnings() Get string warnings caught evaluation. get_messages() Get string messages caught evaluation. is_evaluated() Return TRUE chunk evaluated, FALSE otherwise. is_warnings() Return TRUE chunk evaluated output messages, FALSE otherwise. is_messages() Return TRUE chunk evaluated output messages, FALSE otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunk_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code chunk - including expression and variables — chunk_call","text":"","code":"y <- 0 x <- chunk$new(expression = quote(y <- 1))  x$get_rcode() #> [1] \"y <- 1\" x$is_ok() #> [1] FALSE x$info_msg() #> [1] \"Chunk not evaluated yet.\" x$eval() x$is_ok() #> [1] TRUE cat(x$info_msg()) #> Everything went well! #>  #> when evaluating the following code: #> y <- 1 y == 1 #> [1] TRUE  # error handling x <- chunk$new(expression = call(\"stop\", \"test\")) x$eval() x$is_ok() #> [1] FALSE x$info_msg() #> [1] \"The following errors(s) occurred:\\ntest\\n\\nwhen evaluating the following code:\\nstop(\\\"test\\\")\\n\" x$info() #> $expression #> stop(\"test\") #>  #> $is_evaluated #> [1] TRUE #>  #> $is_error #> [1] TRUE #>  #> $is_warning #> [1] FALSE #>  #> $is_message #> [1] FALSE #>  #> $eval_msg #> [1] \"test\" #>"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunk_comment.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Code Chunk comment — chunk_comment","text":"R6Class generator object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunk_comment.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Code Chunk comment — chunk_comment","text":"comment (character) comment_to_show","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunk_comment.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Code Chunk comment — chunk_comment","text":"initialize(comment = NULL) Create object setting field comment get_rcode(envir = parent.frame() code chunk string R-Code returned. get_eval_info() Returns list information evaluation.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunk_comment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code Chunk comment — chunk_comment","text":"","code":"x <- chunk_comment$new(comment = \"I want a comment in this line\")  x$eval() #> NULL x$get_rcode() #> [1] \"# I want a comment in this line\" safe_comment <- x$get_rcode()  x <- chunk_comment$new(comment = \"# I want a comment in this line\") x$eval() #> NULL x$get_rcode() #> [1] \"# I want a comment in this line\" stopifnot(x$get_rcode() == safe_comment)"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunkpipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a code chunk — chunkpipe","title":"Set a code chunk — chunkpipe","text":"can use two functions set code chunks within reactive inside server function teal module. can use %chunk>% want simply set call chunk. can use <%chunk>% also want assign left hand side value result expression","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunkpipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a code chunk — chunkpipe","text":"","code":"session <- new.env() session$userData <- new.env() session$ns <- function(x) {   if (length(x) == 0) {     \"id\"   } else {     paste0(\"id\", x, sep = \"-\")   } } session$userData[[session$ns(character(0))]]$chunks <- chunks$new()  x <- 5 session$userData[[session$ns(character(0))]]$chunks$reset() myval %<chunk% sum(x, 3)  mysum %<chunk% sum(x, 5)  chunks_eval(chunks = session$userData[[session$ns(character(0))]]$chunks) #> [1] 10 #>[1] 10  cat(   paste(     session$userData[[session$ns(character(0))]]$chunks$get_rcode(),     collapse = \"\\n\"   ) ) #> sum(x, 3) #> sum(x, 5) # x + 3 # sum(x, 5)"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Code chunk handler — chunks","title":"Multiple Code chunk handler — chunks","text":"chunks specialized stack call objects comments. intended capture evaluate R code sequence analysis steps.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multiple Code chunk handler — chunks","text":"R6Class generator object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Multiple Code chunk handler — chunks","text":"initialize(envir = new.env()) Initializes object. push(x, id) method adds expression code chunk comment code chunk object. id given random id generated. eval() method applies eval_id method code chunk stored inside object. get_rcode() Run get_rcode_id code chunks inside object. get_warnings() Return warnings encountered execution code inside object. get_messages() Return list warnings encountered execution code inside object. eval_info(ids = private$get_call_ids()) Accepts vector chunk ids. Returns list evaluation information chunk (messages, warnings, errors). Default hide information chunk_comment objects. Pass chunk ids see information specific ids. reset() Delete chunks handles inside stack reset environment. info() Print private content. Used debugging . info_msg() Get information evaluation chunk stack went. useful is_ok() returns FALSE. get(var, inherits = FALSE) Returns variable chunks environment. information see get. is_ok() Checks chunks evaluated error. get_eval_msg() Returns error message error. validate_is_ok(msg) Return shiny's validation error custom message is_ok returns FALSE. validate_is(var, class, msg) Return shiny's validation error custom message var class class. validate_all(var, class, msg) Return shiny's validation error custom message is_ok returns FALSE var class class. ls(.names = FALSE) Return vector bindings present environment chunks object. See ls information. get_reactive_summary() Return shiny::reactiveValues object three elements: msgs, warnings, errors. element logical vector values corresponding chunk objects inside chunks. TRUE msgs vector indicates least one message returned corresponding chunk. TRUE warnings vector indicates least one warning returned. TRUE errors vector indicates error thrown.","code":"\\code{envir}: (optional) environment to get objects from to chunks environment The method needs the parameter \\code{x}. In case this is of type \\code{call} and the code will   be evaluated via \\code{eval}. Additionally, the code can be given as a string and a comment will be inserted. This method should not be evaluated multiple times, else it throws a warning. This is due to the    fact that multiple evaluations of the following second code snippet is dangerous:    \\itemize{      \\item{1 }{a <- 2}      \\item{2 }{a <- a + 1}    }    \\code{eval} evaluates code just once and warn user if one tries to evaluate multiple times."},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple Code chunk handler — chunks","text":"","code":"x <- chunks$new()  x$push(id = \"test_1\", x = call(\"print\", 1)) res <- x$eval() #> [1] 1 res #> [1] 1  x$push(id = \"test_2\", x = call(\"print\", 2)) x$push(id = \"test_3\", x = call(\"print\", 3)) res <- x$eval() #> [1] 2 #> [1] 3 res #> [1] 3 # Below gives a warning if (FALSE) { chunks_eval(chunks = x) }  x$push(id = \"test_4\", x = call(\"print\", 4)) x$get_rcode() #>     test_1     test_2     test_3     test_4  #> \"print(1)\" \"print(2)\" \"print(3)\" \"print(4)\"   x$get_rcode() #>     test_1     test_2     test_3     test_4  #> \"print(1)\" \"print(2)\" \"print(3)\" \"print(4)\"   # Error handling x$push(id = \"test_error\", x = call(\"stop\", \"test\")) x$eval() # returns NULL, does not rise an error #> [1] 4 x$is_ok() # FALSE #> [1] FALSE x$info_msg() #> [1] \"The following errors(s) occurred:\\ntest\\n\\nwhen evaluating the following code:\\nstop(\\\"test\\\")\\n\" # Below used inside shiny apps if (FALSE) { x$validate_is_ok(\"This is my custom error message\") }  x$info() #> $envir #> <environment: 0x556e9bb76fe8> #>  #> $id #> [1] \"test_1\"     \"test_2\"     \"test_3\"     \"test_4\"     \"test_error\" #>  #> $is_evaluated #> [1] TRUE TRUE TRUE TRUE TRUE #>  #> $is_remaining #> [1] FALSE FALSE FALSE FALSE FALSE #>  #> $is_error #> [1] FALSE FALSE FALSE FALSE  TRUE #>  #> $is_warning #> [1] FALSE FALSE FALSE FALSE FALSE #>  #> $is_message #> [1] FALSE FALSE FALSE FALSE FALSE #>  #> $eval_msg #> [1] \"The following errors(s) occurred:\\ntest\\n\\nwhen evaluating the following code:\\nstop(\\\"test\\\")\\n\" #>  #> $code_chunks #> $code_chunks[[1]] #> <chunk_call> #>   Public: #>     clone: function (deep = FALSE)  #>     eval: function (envir = parent.frame())  #>     get_errors: function ()  #>     get_eval_info: function ()  #>     get_messages: function ()  #>     get_rcode: function (envir = parent.frame())  #>     get_warnings: function ()  #>     info: function ()  #>     info_msg: function ()  #>     initialize: function (expression = NULL)  #>     is_errors: function ()  #>     is_evaluated: function ()  #>     is_messages: function ()  #>     is_ok: function ()  #>     is_warnings: function ()  #>     reset: function ()  #>   Private: #>     .is_errors: FALSE #>     .is_evaluated: TRUE #>     .is_messages: FALSE #>     .is_warnings: FALSE #>     deparse: function (x)  #>     errors:  #>     eval_msg:  #>     expression: call #>     messages:  #>     set_expression: function (expression)  #>     warnings:  #>  #> $code_chunks[[2]] #> <chunk_call> #>   Public: #>     clone: function (deep = FALSE)  #>     eval: function (envir = parent.frame())  #>     get_errors: function ()  #>     get_eval_info: function ()  #>     get_messages: function ()  #>     get_rcode: function (envir = parent.frame())  #>     get_warnings: function ()  #>     info: function ()  #>     info_msg: function ()  #>     initialize: function (expression = NULL)  #>     is_errors: function ()  #>     is_evaluated: function ()  #>     is_messages: function ()  #>     is_ok: function ()  #>     is_warnings: function ()  #>     reset: function ()  #>   Private: #>     .is_errors: FALSE #>     .is_evaluated: TRUE #>     .is_messages: FALSE #>     .is_warnings: FALSE #>     deparse: function (x)  #>     errors:  #>     eval_msg:  #>     expression: call #>     messages:  #>     set_expression: function (expression)  #>     warnings:  #>  #> $code_chunks[[3]] #> <chunk_call> #>   Public: #>     clone: function (deep = FALSE)  #>     eval: function (envir = parent.frame())  #>     get_errors: function ()  #>     get_eval_info: function ()  #>     get_messages: function ()  #>     get_rcode: function (envir = parent.frame())  #>     get_warnings: function ()  #>     info: function ()  #>     info_msg: function ()  #>     initialize: function (expression = NULL)  #>     is_errors: function ()  #>     is_evaluated: function ()  #>     is_messages: function ()  #>     is_ok: function ()  #>     is_warnings: function ()  #>     reset: function ()  #>   Private: #>     .is_errors: FALSE #>     .is_evaluated: TRUE #>     .is_messages: FALSE #>     .is_warnings: FALSE #>     deparse: function (x)  #>     errors:  #>     eval_msg:  #>     expression: call #>     messages:  #>     set_expression: function (expression)  #>     warnings:  #>  #> $code_chunks[[4]] #> <chunk_call> #>   Public: #>     clone: function (deep = FALSE)  #>     eval: function (envir = parent.frame())  #>     get_errors: function ()  #>     get_eval_info: function ()  #>     get_messages: function ()  #>     get_rcode: function (envir = parent.frame())  #>     get_warnings: function ()  #>     info: function ()  #>     info_msg: function ()  #>     initialize: function (expression = NULL)  #>     is_errors: function ()  #>     is_evaluated: function ()  #>     is_messages: function ()  #>     is_ok: function ()  #>     is_warnings: function ()  #>     reset: function ()  #>   Private: #>     .is_errors: FALSE #>     .is_evaluated: TRUE #>     .is_messages: FALSE #>     .is_warnings: FALSE #>     deparse: function (x)  #>     errors:  #>     eval_msg:  #>     expression: call #>     messages:  #>     set_expression: function (expression)  #>     warnings:  #>  #> $code_chunks[[5]] #> <chunk_call> #>   Public: #>     clone: function (deep = FALSE)  #>     eval: function (envir = parent.frame())  #>     get_errors: function ()  #>     get_eval_info: function ()  #>     get_messages: function ()  #>     get_rcode: function (envir = parent.frame())  #>     get_warnings: function ()  #>     info: function ()  #>     info_msg: function ()  #>     initialize: function (expression = NULL)  #>     is_errors: function ()  #>     is_evaluated: function ()  #>     is_messages: function ()  #>     is_ok: function ()  #>     is_warnings: function ()  #>     reset: function ()  #>   Private: #>     .is_errors: TRUE #>     .is_evaluated: TRUE #>     .is_messages: FALSE #>     .is_warnings: FALSE #>     deparse: function (x)  #>     errors: test #>     eval_msg: test #>     expression: call #>     messages:  #>     set_expression: function (expression)  #>     warnings:  #>  #>  #> $latest_result #> NULL #>   # Analysis Example  x <- chunks$new() x$push(\"# Prepare Data\") x$push(quote(x <- iris$Sepal.Length)) x$push(quote({   y <- iris$Petal.Length   {     col <- iris$Species   } }))  x$eval() #>   [1] setosa     setosa     setosa     setosa     setosa     setosa     #>   [7] setosa     setosa     setosa     setosa     setosa     setosa     #>  [13] setosa     setosa     setosa     setosa     setosa     setosa     #>  [19] setosa     setosa     setosa     setosa     setosa     setosa     #>  [25] setosa     setosa     setosa     setosa     setosa     setosa     #>  [31] setosa     setosa     setosa     setosa     setosa     setosa     #>  [37] setosa     setosa     setosa     setosa     setosa     setosa     #>  [43] setosa     setosa     setosa     setosa     setosa     setosa     #>  [49] setosa     setosa     versicolor versicolor versicolor versicolor #>  [55] versicolor versicolor versicolor versicolor versicolor versicolor #>  [61] versicolor versicolor versicolor versicolor versicolor versicolor #>  [67] versicolor versicolor versicolor versicolor versicolor versicolor #>  [73] versicolor versicolor versicolor versicolor versicolor versicolor #>  [79] versicolor versicolor versicolor versicolor versicolor versicolor #>  [85] versicolor versicolor versicolor versicolor versicolor versicolor #>  [91] versicolor versicolor versicolor versicolor versicolor versicolor #>  [97] versicolor versicolor versicolor versicolor virginica  virginica  #> [103] virginica  virginica  virginica  virginica  virginica  virginica  #> [109] virginica  virginica  virginica  virginica  virginica  virginica  #> [115] virginica  virginica  virginica  virginica  virginica  virginica  #> [121] virginica  virginica  virginica  virginica  virginica  virginica  #> [127] virginica  virginica  virginica  virginica  virginica  virginica  #> [133] virginica  virginica  virginica  virginica  virginica  virginica  #> [139] virginica  virginica  virginica  virginica  virginica  virginica  #> [145] virginica  virginica  virginica  virginica  virginica  virginica  #> Levels: setosa versicolor virginica x$get(\"col\")[1:5] #> [1] setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica if (FALSE) { x$get(\"mean\") # should not scope in getter }  x$push(\"\") # newline x$push(\"# Analysis\") x$push(quote(plot(x, y, col = col)))  x$is_ok() #> [1] FALSE x$eval()  #> NULL x$is_ok() # now all chunks were evaluated and no errors occured #> [1] TRUE  cat(paste(x$get_rcode(), collapse = \"\\n\")) #> # Prepare Data #> x <- iris$Sepal.Length #> y <- iris$Petal.Length #> col <- iris$Species #>   #> # Analysis #> plot(x, y, col = col)"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates all remaining chunks — chunks_eval","title":"Evaluates all remaining chunks — chunks_eval","text":"can evaluate remaining chunks chunks setup shiny session (see get_chunks_object()). value last chunk evaluated returned. method evaluated multiple times, else throws warning. due fact multiple evaluations following second code snippet dangerous: 1 <- 2 2 <- + 1 eval_chunks evaluates code just warn user one tries evaluate multiple times.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates all remaining chunks — chunks_eval","text":"","code":"chunks_eval(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates all remaining chunks — chunks_eval","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_eval_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get chunks evaluation message — chunks_get_eval_msg","text":"","code":"chunks_get_eval_msg(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_eval_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get chunks evaluation message — chunks_get_eval_msg","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_eval_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get chunks evaluation message — chunks_get_eval_msg","text":"(character) chunks evaluation message","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_rcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the R-Code from a chunks object — chunks_get_rcode","title":"Returns the R-Code from a chunks object — chunks_get_rcode","text":"function returns list R-Code reproduces currently registered chunks inside chunk stack.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_rcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the R-Code from a chunks object — chunks_get_rcode","text":"","code":"chunks_get_rcode(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_rcode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the R-Code from a chunks object — chunks_get_rcode","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_rcode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the R-Code from a chunks object — chunks_get_rcode","text":"R code stored inside chunks can used reproduce value evaluation code chunks.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable from chunk environment — chunks_get_var","text":"","code":"chunks_get_var(var, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable from chunk environment — chunks_get_var","text":"var (character) variable name chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_get_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable from chunk environment — chunks_get_var","text":"variable chunks environment","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_is_ok.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check chunks status (i.e. evaluated and no errors) — chunks_is_ok","text":"","code":"chunks_is_ok(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_is_ok.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check chunks status (i.e. evaluated and no errors) — chunks_is_ok","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_is_ok.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check chunks status (i.e. evaluated and no errors) — chunks_is_ok","text":"(logical) flag whether everything good","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets messages from the chunks object — chunks_messages","title":"Gets messages from the chunks object — chunks_messages","text":"function returns list messages encountered evaluation code chunks object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_messages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets messages from the chunks object — chunks_messages","text":"","code":"chunks_messages(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_messages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets messages from the chunks object — chunks_messages","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pushes a code chunk for global chunks — chunks_push","text":"","code":"chunks_push(expression, id = NULL, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pushes a code chunk for global chunks — chunks_push","text":"expression (call) Expression contains function call. id optional, (character) ID given code chunk chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pushes a code chunk for global chunks — chunks_push","text":"Nothing, just add chunk chunks argument","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pushes a code chunk for global chunks — chunks_push","text":"","code":"all_chunks <- chunks$new() chunks_push(call(\"as.character\", x = 3), \"tbl\", chunks = all_chunks)  x <- 3 chunks_push(quote(as.character(x)), \"tbl2\", chunks = all_chunks)"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pushes a chunks stack to global chunks — chunks_push_chunks","text":"","code":"chunks_push_chunks(x, overwrite = FALSE, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pushes a chunks stack to global chunks — chunks_push_chunks","text":"x (chunks) stack object overwrite optional, (logical) Whether ignore conflicts two chunk environments use added one default chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pushes a chunks stack to global chunks — chunks_push_chunks","text":"Nothing, just add chunk chunks argument","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pushes a chunks stack to global chunks — chunks_push_chunks","text":"","code":"chunks_object <- chunks$new() chunks_push(bquote(x <- 1), chunks = chunks_object)  chunks_object2 <- chunks$new() chunks_push(bquote(y <- 1), chunks = chunks_object2)  chunks_push_chunks(chunks_object2, chunks = chunks_object)  chunks_get_rcode(chunks_object) #>      chunk_1 UPWWBchunk_1  #>     \"x <- 1\"     \"y <- 1\""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pushes a code comment chunk for global chunks — chunks_push_comment","text":"","code":"chunks_push_comment(comment, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pushes a code comment chunk for global chunks — chunks_push_comment","text":"comment (codecharacter) Comment inserted Show-R code. chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_comment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pushes a code comment chunk for global chunks — chunks_push_comment","text":"","code":"all_chunks <- chunks$new() chunks_push_comment(\"this is a comment\", chunks = all_chunks)  chunks_get_rcode(chunks = all_chunks) == \"# this is a comment\" #> chunk_1  #>    TRUE"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_data_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pushes a merged_dataset to chunks — chunks_push_data_merge","text":"","code":"chunks_push_data_merge(x, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_data_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pushes a merged_dataset to chunks — chunks_push_data_merge","text":"x (list) outcome data_merge_srv chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_new_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds an empty line to the code chunks — chunks_push_new_line","text":"","code":"chunks_push_new_line(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_new_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds an empty line to the code chunks — chunks_push_new_line","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_push_new_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds an empty line to the code chunks — chunks_push_new_line","text":"","code":"all_chunks <- chunks$new() chunks_push_new_line(chunks = all_chunks)  chunks_get_rcode(chunks = all_chunks) == \" \" #> chunk_1  #>    TRUE"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Resets the current chunk list — chunks_reset","title":"Resets the current chunk list — chunks_reset","text":"Empty chunk list remaining evaluated list.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resets the current chunk list — chunks_reset","text":"","code":"chunks_reset(envir = parent.frame(), chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resets the current chunk list — chunks_reset","text":"envir (environment) environment hand chunks. chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resets the current chunk list — chunks_reset","text":"nothing, modifies shiny session object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_safe_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates all remaining chunks and validate if error — chunks_safe_eval","title":"Evaluates all remaining chunks and validate if error — chunks_safe_eval","text":"can evaluate remaining chunks chunks setup shiny session (see get_chunks_object()). value last chunk evaluated returned.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_safe_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates all remaining chunks and validate if error — chunks_safe_eval","text":"","code":"chunks_safe_eval(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_safe_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates all remaining chunks and validate if error — chunks_safe_eval","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_uneval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resets the evaluation of the chunks. — chunks_uneval","text":"","code":"chunks_uneval(   chunks = get_chunks_object(),   overwrite = FALSE,   envir = parent.frame() )"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_uneval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resets the evaluation of the chunks. — chunks_uneval","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object overwrite (logical) Whether use values current environment just use new one envir (environment) environment use overwriting. used overwrite TRUE","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_uneval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resets the evaluation of the chunks. — chunks_uneval","text":"Keep code pieces.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise shiny validate error if chunks status is not ok or variable is not of a certain class — chunks_validate_all","text":"","code":"chunks_validate_all(var, class, msg = NULL, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise shiny validate error if chunks status is not ok or variable is not of a certain class — chunks_validate_all","text":"var (character) variable name class (character) class name msg optional, (character) custom error message, NULL default error message used chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raise shiny validate error if chunks status is not ok or variable is not of a certain class — chunks_validate_all","text":"shiny validation error conditions met","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Raise shiny validate error if chunks status is not ok or variable is not of a certain class — chunks_validate_all","text":"chunks_validate_is_ok chunks_validate_is","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes validate statements on custom expressions that are evaluated inside a chunks object's environment — chunks_validate_custom","text":"","code":"chunks_validate_custom(x, msg = NULL, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes validate statements on custom expressions that are evaluated inside a chunks object's environment — chunks_validate_custom","text":"x (language) expression evaluates TRUE FALSE inside chunks environment msg optional, (character) custom error message, NULL default error message used chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes validate statements on custom expressions that are evaluated inside a chunks object's environment — chunks_validate_custom","text":"shiny validation error x evaluates FALSE chunks environment","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_is.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise shiny validate error if variable is not of a certain class — chunks_validate_is","text":"","code":"chunks_validate_is(var, class, msg = NULL, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_is.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise shiny validate error if variable is not of a certain class — chunks_validate_is","text":"var (character) variable name class (character) class name msg optional, (character) custom error message, NULL default error message used chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_is.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raise shiny validate error if variable is not of a certain class — chunks_validate_is","text":"shiny validation error variable certain class","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_is_ok.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise shiny validate error if chunks status is not ok — chunks_validate_is_ok","text":"","code":"chunks_validate_is_ok(msg = NULL, chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_is_ok.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise shiny validate error if chunks status is not ok — chunks_validate_is_ok","text":"msg optional, (character) custom error message, NULL default error message used chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_is_ok.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raise shiny validate error if chunks status is not ok — chunks_validate_is_ok","text":"shiny validation error chunks ok","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_validate_is_ok.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Raise shiny validate error if chunks status is not ok — chunks_validate_is_ok","text":"chunks_is_ok","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets warnings from the chunks object — chunks_warnings","title":"Gets warnings from the chunks object — chunks_warnings","text":"function returns list warnings encountered evaluation code chunks object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets warnings from the chunks object — chunks_warnings","text":"","code":"chunks_warnings(chunks = get_chunks_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/chunks_warnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets warnings from the chunks object — chunks_warnings","text":"chunks optional, (chunks) object. provided automatic chunks object detection run via get_chunks_object","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/get_chunks_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets chunks object — get_chunks_object","text":"","code":"get_chunks_object(session = get_session_object(), parent_idx = 0L)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_chunks_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets chunks object — get_chunks_object","text":"session optional, (ShinySession)shiny session object, missing getDefaultReactiveDomain used. parent_idx optional (integer) shiny parent environment chunks object taken.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_chunks_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets chunks object — get_chunks_object","text":"chunks object","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/get_eval_details_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server part of get_chunks_info — get_eval_details_srv","text":"","code":"get_eval_details_srv(id, chunks)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_eval_details_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server part of get_chunks_info — get_eval_details_srv","text":"id ID string corresponds ID used call module's UI function. chunks (chunks) object, messages, warnings errors gathered","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_eval_details_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server part of get_chunks_info — get_eval_details_srv","text":"observer evaluation_details actionButton","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/get_eval_details_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The UI part of get chunks info module — get_eval_details_ui","text":"","code":"get_eval_details_ui(id)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_eval_details_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The UI part of get chunks info module — get_eval_details_ui","text":"id (character) id shiny module","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_eval_details_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The UI part of get chunks info module — get_eval_details_ui","text":"(shiny.tag)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_number_in_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a shiny::tag element, which represents a colored box\nwith a character inside of it. — get_number_in_box","title":"Creates a shiny::tag element, which represents a colored box\nwith a character inside of it. — get_number_in_box","text":"Creates shiny::tag element, represents colored box character inside .","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_number_in_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a shiny::tag element, which represents a colored box\nwith a character inside of it. — get_number_in_box","text":"","code":"get_number_in_box(character, box_color, char_color)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_number_in_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a shiny::tag element, which represents a colored box\nwith a character inside of it. — get_number_in_box","text":"character (character numeric value) single string put inside box box_color (character value) hex code color (including #) recognized CSS3 color name char_color (character value) hex code color (including #) recognized CSS3 color name","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_number_in_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a shiny::tag element, which represents a colored box\nwith a character inside of it. — get_number_in_box","text":"shiny::tag character color char_color inside box color box_color","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_number_in_box.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a shiny::tag element, which represents a colored box\nwith a character inside of it. — get_number_in_box","text":"Uses Font-Awesome library icons get box icon.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include CSS files from /inst/css/ package directory to application header — include_css_files","title":"Include CSS files from /inst/css/ package directory to application header — include_css_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include CSS files from /inst/css/ package directory to application header — include_css_files","text":"","code":"include_css_files(pattern = \"*\")"},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include CSS files from /inst/css/ package directory to application header — include_css_files","text":"pattern (character) pattern files included","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include CSS files from /inst/css/ package directory to application header — include_css_files","text":"HTML code includes CSS files","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/init_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allows using chunks in the global environment of a teal app — init_chunks","text":"","code":"init_chunks(new_chunks = chunks$new(), session = get_session_object())"},{"path":"https://insightsengineering.github.io/teal.code/reference/init_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allows using chunks in the global environment of a teal app — init_chunks","text":"new_chunks optional, (chunks_stack) new object initialize session optional, (ShinySession) shiny session object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/init_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allows using chunks in the global environment of a teal app — init_chunks","text":"nothing, modifies shiny session object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/init_chunks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Allows using chunks in the global environment of a teal app — init_chunks","text":"chunks","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/overwrite_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrites chunks object in session — overwrite_chunks","text":"","code":"overwrite_chunks(   x = chunks$new(envir = parent.frame()),   session = get_session_object() )"},{"path":"https://insightsengineering.github.io/teal.code/reference/overwrite_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overwrites chunks object in session — overwrite_chunks","text":"x (chunks) chunks-object used inside current session. session optional, (ShinySession) shiny session object, missing getDefaultReactiveDomain used.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/overwrite_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overwrites chunks object in session — overwrite_chunks","text":"nothing, modifies shiny session object","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/remove_enclosing_curly_braces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes curly brackets from string — remove_enclosing_curly_braces","text":"","code":"remove_enclosing_curly_braces(x)"},{"path":"https://insightsengineering.github.io/teal.code/reference/remove_enclosing_curly_braces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes curly brackets from string — remove_enclosing_curly_braces","text":"x (character) string code chunk","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/remove_enclosing_curly_braces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes curly brackets from string — remove_enclosing_curly_braces","text":"string without curly braces","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show_eval_details_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Shows Evaluation Details Modal — show_eval_details_modal","title":"Shows Evaluation Details Modal — show_eval_details_modal","text":"Use shiny::showModal() function show errors generated chunks.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show_eval_details_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shows Evaluation Details Modal — show_eval_details_modal","text":"","code":"show_eval_details_modal(chunks)"},{"path":"https://insightsengineering.github.io/teal.code/reference/show_eval_details_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shows Evaluation Details Modal — show_eval_details_modal","text":"chunks (chunks) object, messages, warnings errors gathered","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show_eval_details_modal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shows Evaluation Details Modal — show_eval_details_modal","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show_eval_details_modal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shows Evaluation Details Modal — show_eval_details_modal","text":"shiny::showModal() get_eval_details_srv()","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/teal.code-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.code: Code storage and execution class for teal applications — teal.code-package","title":"teal.code: Code storage and execution class for teal applications — teal.code-package","text":"teal.code package contains functionalities can used store execute R calls. chunks class allows create teal module returns code reproduce application outputs.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/teal.code-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.code: Code storage and execution class for teal applications — teal.code-package","text":"Maintainer: NEST basel.nestcicd@roche.com Authors: Nikolas Burkoff nikolas.burkoff@roche.com Mahmoud Hallal mahmoud.hallal@roche.com Dawid Kaledkowski dawid.kaledkowski@roche.com Maciej Nasinski maciej.nasinski@contractors.roche.com Konrad Pagacz konrad.pagacz@contractors.roche.com Pawel Rucki pawel.rucki@contractors.roche.com Junlue Zhao zhaoj88@gene.com contributors: Tadeusz Lewandowski tadeusz.lewandowski@roche.com [contributor] Roche [copyright holder, funder]","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-1-0-9001","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.1.0.9001","text":"Added template pkgdown site.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"tealcode-010","dir":"Changelog","previous_headings":"","what":"teal.code 0.1.0","title":"teal.code 0.1.0","text":"Initial release teal.code, package code storage execution class teal applications.","code":""}]
