% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-code_dependency.R
\name{code_dependency}
\alias{code_dependency}
\title{Create Object Dependencies Structure Within Parsed Code}
\usage{
code_dependency(parsed_code, object_names)
}
\arguments{
\item{parsed_code}{(\code{expression}) result of \code{parse()}}

\item{object_names}{(\code{character(n)}) vector of names of existing objects}
}
\value{
A \code{list} containing 3 elements
\itemize{
\item \code{occurrence} - named \code{list} by object names with numeric vector as elements indicating calls in which object
appears.
\item \code{cooccurrence} - \code{list} of the same length as number of calls in \code{parsed_code}, containing \code{NULL}s if there is no
co-occurrence between objects, or a \code{character} vector indicating co-occurrence of objects in specific \code{parsed_code}
call element. If a character vector, then the first element is the name of the dependent object, and the rest are the
influencing objects
\item \code{effects} - named \code{list}  by object names with numeric vector as elements indicating which calls has effect on this
object, or NULL if there are no side-effects pointing at this object.
}
}
\description{
Build up ingredients needed to restore the code required to create a specific object.
}
\details{
The relation between objects is assumed to be passed by \verb{<-}, \code{=} or \verb{->} assignment operators. No other
object creation methods (like \code{assign}, or \verb{<<-} or any non-standard-evaluation method) are supported. To specify
relations between side-effects and objects, use specific comment tag \verb{# @effect object_name} at the end of the line
in which the side-effect appears. Check examples to see the usage.
}
\keyword{internal}
