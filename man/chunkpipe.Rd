% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chunks_pipe.R
\name{chunkpipe}
\alias{chunkpipe}
\alias{\%<chunk\%}
\title{Set a code chunk}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

You can use these two functions to set code chunks within a reactive inside
the server function of a teal module. You can use \verb{\%chunk>\%} if you
want to simply set the call into the chunk. You can use \verb{<\%chunk>\%} if you
also want to assign the left hand side value to the result of this expression
}
\examples{

session <- new.env()
session$userData <- new.env()
session$ns <- function(x) {
  if (length(x) == 0) {
    "id"
  } else {
    paste0("id", x, sep = "-")
  }
}
session$userData[[session$ns(character(0))]]$chunks <- chunks_new()

x <- 5
session$userData[[session$ns(character(0))]]$chunks$reset()
myval \%<chunk\% sum(x, 3)

mysum \%<chunk\% sum(x, 5)

chunks_eval(chunks = session$userData[[session$ns(character(0))]]$chunks)
#>[1] 10

cat(
  paste(
    session$userData[[session$ns(character(0))]]$chunks$get_rcode(),
    collapse = "\n"
  )
)
# x + 3
# sum(x, 5)
}
