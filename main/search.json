[{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.code/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"introduction-to-qenv","dir":"Articles","previous_headings":"","what":"Introduction to qenv","title":"qenv","text":"qenv R object contains code environment can used create reproducible outputs.","code":""},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"initialization","dir":"Articles","previous_headings":"Introduction to qenv","what":"Initialization","title":"qenv","text":"new_qenv() function serves gateway create initial qenv object: enhanced reproducibility, ‚Äôs crucial provide code used generate objects creating qenv objects inside environment. responsibility falls upon user.","code":"library(teal.code)  # can be created without any code/environment empty_qenv <- new_qenv() print(empty_qenv) ## <environment: 0x55dba4662a40> [L] ## Parent: <environment: package:teal.code> # or can be created with objects inside the environment my_qenv <- new_qenv(env = list2env(list(x = 5)), code = \"x <- 5\") print(my_qenv) ## <environment: 0x55dba19f7c00> [L] ## Parent: <environment: package:teal.code> ## Bindings: ## ‚Ä¢ x: <dbl> [L]"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"qenv-basic-usage","dir":"Articles","previous_headings":"Introduction to qenv","what":"qenv basic usage","title":"qenv","text":"eval_code() function executes code within qenv environment, yielding new qenv object output. extract objects qenv, use [[; particularly useful displaying shiny app. can retrieve code used generate qenv using get_code() function.","code":"library(magrittr)  q2 <- eval_code(my_qenv, \"y <- x * 2\") %>% eval_code(\"z <- y * 2\")  # my_qenv still contains only x print(my_qenv) ## <environment: 0x55dba19f7c00> [L] ## Parent: <environment: package:teal.code> ## Bindings: ## ‚Ä¢ x: <dbl> [L] # q2 contains x, y and z print(q2) ## <environment: 0x55dba3033748> [L] ## Parent: <environment: package:magrittr> ## Bindings: ## ‚Ä¢ x: <dbl> [L] ## ‚Ä¢ y: <dbl> [L] ## ‚Ä¢ z: <dbl> [L] print(q2[[\"y\"]]) ## [1] 10 cat(paste(get_code(q2), collapse = \"\\n\")) ## x <- 5 ## y <- x * 2 ## z <- y * 2"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"substitutions","dir":"Articles","previous_headings":"Introduction to qenv","what":"Substitutions","title":"qenv","text":"cases one may want substitute elements code evaluation. Consider case subset iris defined input value. convenient way pass code substitution use within method. See ?within.qenv details.","code":"q <- new_qenv() q <- eval_code(q, quote(i <- subset(iris, Species == \"setosa\"))) q <- eval_code(q, substitute(   ii <- subset(iris, Species == species),   env = list(species = \"versicolor\") )) input_value <- \"virginica\" q <- eval_code(q, substitute(   iii <- subset(iris, Species == species),   env = list(species = input_value) ))  summary(q[[\"i\"]]$Species) ##     setosa versicolor  virginica  ##         50          0          0 summary(q[[\"ii\"]]$Species) ##     setosa versicolor  virginica  ##          0         50          0 summary(q[[\"iii\"]]$Species) ##     setosa versicolor  virginica  ##          0          0         50 qq <- new_qenv() qq <- within(qq, i <- subset(iris, Species == \"setosa\")) qq <- within(qq, ii <- subset(iris, Species == species), species = \"versicolor\") input_value <- \"virginica\" qq <- within(qq, iii <- subset(iris, Species == species), species = input_value)  summary(qq[[\"i\"]]$Species) ##     setosa versicolor  virginica  ##         50          0          0 summary(qq[[\"ii\"]]$Species) ##     setosa versicolor  virginica  ##          0         50          0 summary(qq[[\"iii\"]]$Species) ##     setosa versicolor  virginica  ##          0          0         50"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"combining-qenv-objects","dir":"Articles","previous_headings":"Introduction to qenv","what":"Combining qenv objects","title":"qenv","text":"Given pair qenv objects, may able ‚Äújoin‚Äù , creating new qenv object encompassing union environments, along requisite code reproduction: feasibility joining qenv objects hinges contents environments code‚Äôs order. Refer function documentation details..","code":"common_q <- eval_code(new_qenv(), quote(x <- 1))  x_q <- eval_code(common_q, quote(y <- 5)) y_q <- eval_code(common_q, quote(z <- 5))  join_q <- join(x_q, y_q)  print(join_q) ## <environment: 0x55dba12bcbc8> ## Parent: <environment: package:magrittr> ## Bindings: ## ‚Ä¢ x: <dbl> ## ‚Ä¢ y: <dbl> ## ‚Ä¢ z: <dbl>"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"warnings-and-messages-in-qenv-objects","dir":"Articles","previous_headings":"Introduction to qenv","what":"Warnings and messages in qenv objects","title":"qenv","text":"cases warnings messages arise evaluating code within qenv environment, captured stored within qenv object. Access messages warnings using @ operator. particular line code doesn‚Äôt trigger warnings messages, corresponding message/warning value empty string. Additionally, helper function, get_warnings(), available generate formatted string comprising warnings code responsible generating . returns NULL warnings present.","code":"q_message <- eval_code(new_qenv(), quote(message(\"this is a message\"))) q_message@messages ## [1] \"> this is a message\\n\" q_warning <- eval_code(new_qenv(), quote(warning(\"and this is a warning\"))) q_warning@warnings ## [1] \"> and this is a warning\\n\" q_message@warnings ## [1] \"\" q_warning@messages ## [1] \"\""},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"utilizing-qenv-inside-shiny-applications","dir":"Articles","previous_headings":"","what":"Utilizing qenv inside shiny applications","title":"qenv","text":"functions can seamlessly integrated shiny applications produce reproducible outputs. example , rcode section showcases code employed generating output. employing qenv evaluate code, error occur, object type qenv.error generated. object can utilized wherever qenv object used, alleviating need code alterations handle errors. Select error_option example witness qenv error handling action.","code":"library(shiny) library(magrittr) # create an initial qenv with the data in data_q <- new_qenv() %>% eval_code(\"iris_data <- iris\")  ui <- fluidPage(   radioButtons(     \"option\", \"Choose a column to plot:\",     c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\", \"error_option\")   ),   verbatimTextOutput(\"rcode\"),   plotOutput(\"plot\") )  server <- function(input, output, session) {   # create a qenv containing the reproducible output   output_q <- reactive({     req(input$option)     eval_code(       data_q,       bquote(p <- hist(iris_data[, .(input$option)]))     )   })    # display output   output$plot <- renderPlot(output_q()[[\"p\"]])   # display code   output$rcode <- renderText(get_code(output_q())) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"qenv-and-teal-applications","dir":"Articles","previous_headings":"","what":"qenv and teal applications","title":"qenv","text":"versatile qenv object can seamlessly integrate teal modules. Explore teal vignette Creating Custom Modules detailed guidance.","code":""},{"path":"https://insightsengineering.github.io/teal.code/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Pawel Rucki. Author. Nikolas Burkoff. Author. Mahmoud Hallal. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Junlue Zhao. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.code/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Rucki P, Burkoff N, Hallal M, Nasinski M, Pagacz K, Zhao J (2023). teal.code: Code Storage Execution Class 'teal' Applications. https://insightsengineering.github.io/teal.code/, https://github.com/insightsengineering/teal.code.","code":"@Manual{,   title = {teal.code: Code Storage and Execution Class for 'teal' Applications},   author = {Dawid Kaledkowski and Pawel Rucki and Nikolas Burkoff and Mahmoud Hallal and Maciej Nasinski and Konrad Pagacz and Junlue Zhao},   year = {2023},   note = {https://insightsengineering.github.io/teal.code/, https://github.com/insightsengineering/teal.code}, }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Code Storage and Execution Class for teal Applications","text":"teal.code R library providing tools store code execution environment associated . features include: object qenv storing code execution environment integrates well shiny reactives use shiny applications whose outputs require reproducibility (.e.¬†code used generate ) ability chain join qenv objects together provide fine-grained control executed code automatic error warning handling executed code teal.code also ships shiny module helps inspect stored code well messages, warnings error messages resulting evaluation via shiny web application.","code":""},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Code Storage and Execution Class for teal Applications","text":"Alternatively, might want use development version available r-universe.","code":"# stable versions install.packages('teal.code')  # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.code@*release\") # beta versions install.packages('teal.code', repos = c('https://pharmaverse.r-universe.dev', getOption('repos')))  # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.code\")"},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Code Storage and Execution Class for teal Applications","text":"understand use package, please refer Getting Started article, provides multiple examples code implementation. showcase example usage","code":"library(teal.code) my_qenv <- new_qenv(env = list2env(list(x = 5)), code = \"x <- 5\") my_qenv #> Parent: <environment: package:teal.code> #> Bindings: #> ‚Ä¢ x: <dbl> [L] qenv_2 <- eval_code(my_qenv, \"y <- x * 2\") |> eval_code(\"z <- y * 2\") qenv_2 #> <environment: 0x00000135b544cfe8> [L] #> Parent: <environment: package:teal.code> #> Bindings: #> ‚Ä¢ x: <dbl> [L] #> ‚Ä¢ y: <dbl> [L] #> ‚Ä¢ z: <dbl> [L] qenv_2[[\"y\"]] #> [1] 10 cat(paste(get_code(qenv_2), collapse = \"\\n\")) #> x <- 5 #> y <- x * 2 #> z <- y * 2"},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Code Storage and Execution Class for teal Applications","text":"encounter bug feature request - please file issue. questions, discussions staying date, please use ‚Äúteal‚Äù channel pharmaverse slack workspace.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate two qenv objects ‚Äî concat","title":"Concatenate two qenv objects ‚Äî concat","text":"Combine two qenv objects simple concatenate environments code. recommend use join method stricter control case x y contain duplicated bindings code. RHS argument content priority LHS one.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate two qenv objects ‚Äî concat","text":"","code":"concat(x, y)  # S4 method for qenv,qenv concat(x, y)  # S4 method for qenv.error,ANY concat(x, y)  # S4 method for qenv,qenv.error concat(x, y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate two qenv objects ‚Äî concat","text":"x (qenv) y (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate two qenv objects ‚Äî concat","text":"qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate two qenv objects ‚Äî concat","text":"","code":"q1 <- new_qenv(   code = c(iris1 = \"iris1 <- iris\", mtcars1 = \"mtcars1 <- mtcars\"),   env = list2env(list(     iris1 = iris,     mtcars1 = mtcars   )) ) q2 <- q1 q1 <- eval_code(q1, \"iris2 <- iris\") q2 <- eval_code(q2, \"mtcars2 <- mtcars\") qq <- concat(q1, q2) get_code(qq) #> [1] \"iris1 <- iris\"     \"mtcars1 <- mtcars\" \"iris2 <- iris\"     #> [4] \"iris1 <- iris\"     \"mtcars1 <- mtcars\" \"mtcars2 <- mtcars\""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"function opens PDF graphics device using pdf suppress plot display IDE. purpose function avoid opening graphic devices directly IDE.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"","code":"dev_suppress(x)"},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"x lazy binding generates plot(s)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"return value, called side effects.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"function uses .exit ensure PDF graphics device closed (using dev.) function exits, regardless whether exits normally due error. necessary clean graphics device properly avoid potential issues.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"","code":"dev_suppress(plot(1:10))"},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":null,"dir":"Reference","previous_headings":"","what":"If two qenv can be joined ‚Äî .check_joinable","title":"If two qenv can be joined ‚Äî .check_joinable","text":"Checks two qenv objects can combined. information, please see join","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If two qenv can be joined ‚Äî .check_joinable","text":"","code":".check_joinable(x, y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"If two qenv can be joined ‚Äî .check_joinable","text":"x (qenv) y (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"If two qenv can be joined ‚Äî .check_joinable","text":"TRUE able join character used print error message.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/eval_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the code in the qenv environment ‚Äî eval_code","title":"Evaluate the code in the qenv environment ‚Äî eval_code","text":"Given code evaluated qenv environment appended code slot. means state environment always result stored code (qenv initialized) reproducible code.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/eval_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the code in the qenv environment ‚Äî eval_code","text":"","code":"eval_code(object, code)  # S4 method for qenv,expression eval_code(object, code)  # S4 method for qenv,language eval_code(object, code)  # S4 method for qenv,character eval_code(object, code)  # S4 method for qenv.error,ANY eval_code(object, code)"},{"path":"https://insightsengineering.github.io/teal.code/reference/eval_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the code in the qenv environment ‚Äî eval_code","text":"object (qenv) code (character language) code evaluate. Also accepts stores comments","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/eval_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the code in the qenv environment ‚Äî eval_code","text":"qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/eval_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate the code in the qenv environment ‚Äî eval_code","text":"","code":"q1 <- new_qenv(env = list2env(list(a = 1)), code = quote(a <- 1)) q2 <- eval_code(q1, quote(library(checkmate))) q3 <- eval_code(q2, quote(assert_number(a)))"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get code from qenv ‚Äî get_code","title":"Get code from qenv ‚Äî get_code","text":"Get code qenv","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get code from qenv ‚Äî get_code","text":"","code":"get_code(object, deparse = TRUE)  # S4 method for qenv get_code(object, deparse = TRUE)  # S4 method for qenv.error get_code(object)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get code from qenv ‚Äî get_code","text":"object (qenv) deparse (logical(1)) returned code converted character.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get code from qenv ‚Äî get_code","text":"named character reproducible code.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get code from qenv ‚Äî get_code","text":"","code":"q1 <- new_qenv(env = list2env(list(a = 1)), code = quote(a <- 1)) q2 <- eval_code(q1, code = quote(b <- a)) q3 <- eval_code(q2, code = quote(d <- 2)) get_code(q3) #> [1] \"a <- 1\" \"b <- a\" \"d <- 2\" get_code(q3, deparse = FALSE) #> expression(a <- 1, b <- a, d <- 2)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Get object from the qenv environment ‚Äî get_var","title":"Get object from the qenv environment ‚Äî get_var","text":"Get object qenv environment.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get object from the qenv environment ‚Äî get_var","text":"","code":"get_var(object, var)  # S4 method for qenv,character get_var(object, var)  # S4 method for qenv.error,ANY get_var(object, var)  # S4 method for qenv,ANY,missing [[(x, i, j, ...)  # S3 method for qenv.error [[(x, i, j, ...)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get object from the qenv environment ‚Äî get_var","text":"object (qenv) var (character(1)) name variable pull environment. x (qenv) (character) name binding environment (name variable) j used ... used","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get object from the qenv environment ‚Äî get_var","text":"value required variable (var) within qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get object from the qenv environment ‚Äî get_var","text":"","code":"q1 <- new_qenv(env = list2env(list(a = 1)), code = quote(a <- 1)) q2 <- eval_code(q1, code = \"b <- a\") get_var(q2, \"b\") #> [1] 1 q2[[\"b\"]] #> [1] 1"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the warnings of qenv object ‚Äî get_warnings","title":"Get the warnings of qenv object ‚Äî get_warnings","text":"Get warnings qenv object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the warnings of qenv object ‚Äî get_warnings","text":"","code":"get_warnings(object)  # S4 method for qenv.error get_warnings(object)  # S4 method for qenv get_warnings(object)  # S4 method for `NULL` get_warnings(object)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the warnings of qenv object ‚Äî get_warnings","text":"object (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the warnings of qenv object ‚Äî get_warnings","text":"character containing warning information NULL warnings","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the warnings of qenv object ‚Äî get_warnings","text":"","code":"data_q <- new_qenv() data_q <- eval_code(new_qenv(), \"iris_data <- iris\") warning_qenv <- eval_code(   data_q,   bquote(p <- hist(iris_data[, .(\"Sepal.Length\")], ff = \"\")) )  cat(get_warnings(warning_qenv)) #> ~~~ Warnings ~~~ #>  #> > \"ff\" is not a graphical parameter #> > \"ff\" is not a graphical parameter #> > \"ff\" is not a graphical parameter #> > \"ff\" is not a graphical parameter #> when running code: #> p <- hist(iris_data[, \"Sepal.Length\"], ff = \"\") #>  #> ~~~ Trace ~~~ #>  #> iris_data <- iris #> p <- hist(iris_data[, \"Sepal.Length\"], ff = \"\")"},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"","code":"include_css_files(pattern = \"*\")"},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"pattern (character) pattern files included","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/include_css_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"HTML code includes CSS files","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join two qenv objects ‚Äî join","title":"Join two qenv objects ‚Äî join","text":"join() perform checks merges two qenv objects one qenv object. common code start qenvs placed start joined qenv. allows consistent behavior joining qenvs share common ancestor. See example.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join two qenv objects ‚Äî join","text":"","code":"join(x, y)  # S4 method for qenv,qenv join(x, y)  # S4 method for qenv.error,ANY join(x, y)  # S4 method for qenv,qenv.error join(x, y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join two qenv objects ‚Äî join","text":"x (qenv) y (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join two qenv objects ‚Äî join","text":"qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join two qenv objects ‚Äî join","text":"situations join() properly performed, three scenarios: qenv objects contain object name identical.  Example: example, mtcars1 object exists x y objects content identical.mtcars1 x qenv object columns mtcars1 y qenv object (one column). join() look identical @id values qenv objects. index position @ids must determine evaluation order. Otherwise, join() throw error message. Example: error occurs index position identical @id two objects . usage temporary variable code expression cause join() fail.  Example: join() fails provide proper result temporary variable exists objects different value. fix , can set <- NULL code expression objects.","code":"x <- new_qenv(     code = c(mtcars1 = \"mtcars1 <- mtcars\"),     env = list2env(list(mtcars1 = mtcars))   )   y <- new_qenv(     code = c(mtcars1 = \"mtcars1 <- mtcars['wt']\"),     env = list2env(list(mtcars1 = mtcars['wt']))   )   z <- join(x, y)   # Error message will occur common_q <- new_qenv(code = \"v <- 1\", env = list2env(list(v = 1)))   x <- eval_code(     common_q,     \"x <- v\"   )   y <- eval_code(     common_q,     \"y <- v\"   )   z <- eval_code(     y,     \"z <- v\"   )   q <- join(x, y)   join_q <- join(q, z)   # Error message will occur    # Check the order of evaluation based on the id slot   shared_ids <- intersect(q@id, z@id)   match(shared_ids, q@id) # Output: 1 3   match(shared_ids, z@id) # Output: 1 2 common_q <- new_qenv()   x <- eval_code(     common_q,     \"x <- numeric(0)      for (i in 1:2) {        x <- c(x, i)      }\"   )   y <- eval_code(     common_q,     \"y <- numeric(0)      for (i in 1:3) {        y <- c(y, i)      }\"   )   q <- join(x,y)   # Error message will occur    # Check the value of temporary variable i in both objects   x@env$i # Output: 2   y@env$i # Output: 3 common_q <- new_qenv()   x <- eval_code(     common_q,     \"x <- numeric(0)      for (i in 1:2) {        x <- c(x, i)      }      # dummy i variable to fix it      i <- NULL\"   )   y <- eval_code(     common_q,     \"y <- numeric(0)      for (i in 1:3) {        y <- c(y, i)      }      # dummy i variable to fix it      i <- NULL\"   )   q <- join(x,y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join two qenv objects ‚Äî join","text":"","code":"q1 <- new_qenv(   code = c(iris1 = \"iris1 <- iris\", mtcars1 = \"mtcars1 <- mtcars\"),   env = list2env(list(     iris1 = iris,     mtcars1 = mtcars   )) ) q2 <- q1 q1 <- eval_code(q1, \"iris2 <- iris\") q2 <- eval_code(q2, \"mtcars2 <- mtcars\") qq <- join(q1, q2) get_code(qq) #> [1] \"iris1 <- iris\"     \"mtcars1 <- mtcars\" \"iris2 <- iris\"     #> [4] \"mtcars2 <- mtcars\"  common_q <- new_qenv(list2env(list(x = 1)), quote(x <- 1)) y_q <- eval_code(common_q, quote(y <- x * 2)) z_q <- eval_code(common_q, quote(z <- x * 3)) join_q <- join(y_q, z_q) # get_code only has \"x <- 1\" occurring once get_code(join_q) #> [1] \"x <- 1\"     \"y <- x * 2\" \"z <- x * 3\""},{"path":"https://insightsengineering.github.io/teal.code/reference/new_qenv.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize qenv object ‚Äî new_qenv","title":"Initialize qenv object ‚Äî new_qenv","text":"Initialize qenv object code env. order qenv reproducible one needs initialize env can reproduced code. Alternatively, one can create empty qenv evaluate expressions object using eval_code.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/new_qenv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize qenv object ‚Äî new_qenv","text":"","code":"new_qenv(env = new.env(parent = parent.env(.GlobalEnv)), code = expression())  # S4 method for environment,expression new_qenv(env = new.env(parent = parent.env(.GlobalEnv)), code = expression())  # S4 method for environment,character new_qenv(env = new.env(parent = parent.env(.GlobalEnv)), code = expression())  # S4 method for environment,language new_qenv(env = new.env(parent = parent.env(.GlobalEnv)), code = expression())  # S4 method for missing,missing new_qenv(env = new.env(parent = parent.env(.GlobalEnv)), code = expression())"},{"path":"https://insightsengineering.github.io/teal.code/reference/new_qenv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize qenv object ‚Äî new_qenv","text":"env (environment) Environment result code evaluation. code (character(1) language) code evaluate. Accepts stores comments also.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/new_qenv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize qenv object ‚Äî new_qenv","text":"qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/new_qenv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize qenv object ‚Äî new_qenv","text":"","code":"new_qenv(env = list2env(list(a = 1)), code = quote(a <- 1)) #> <environment: 0x55e207d994b8> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ a: <dbl> [L] new_qenv(env = list2env(list(a = 1)), code = parse(text = \"a <- 1\")) #> <environment: 0x55e20b344d00> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ a: <dbl> [L] new_qenv(env = list2env(list(a = 1)), code = \"a <- 1\") #> <environment: 0x55e20cba29d8> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ a: <dbl> [L]"},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproducible class with environment and code. ‚Äî qenv-class","title":"Reproducible class with environment and code. ‚Äî qenv-class","text":"Reproducible class environment code.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Reproducible class with environment and code. ‚Äî qenv-class","text":"code (expression) reproduce environment env (environment) environment content generated evaluation code slot. id (integer) random identifier code element make sure uniqueness joining. warnings (character) warnings output evaluating code messages (character) messages output evaluating code","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/remove_enclosing_curly_braces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes leading and trailing curly brackets from character\nstring and removes indentation of remaining contents ‚Äî remove_enclosing_curly_braces","text":"","code":"remove_enclosing_curly_braces(x)"},{"path":"https://insightsengineering.github.io/teal.code/reference/remove_enclosing_curly_braces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes leading and trailing curly brackets from character\nstring and removes indentation of remaining contents ‚Äî remove_enclosing_curly_braces","text":"x (character)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/remove_enclosing_curly_braces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes leading and trailing curly brackets from character\nstring and removes indentation of remaining contents ‚Äî remove_enclosing_curly_braces","text":"character string without curly braces","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the qenv object ‚Äî show,qenv-method","title":"Show the qenv object ‚Äî show,qenv-method","text":"Prints qenv object","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the qenv object ‚Äî show,qenv-method","text":"","code":"# S4 method for qenv show(object)"},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the qenv object ‚Äî show,qenv-method","text":"object (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the qenv object ‚Äî show,qenv-method","text":"nothing","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the qenv object ‚Äî show,qenv-method","text":"","code":"q1 <- new_qenv(   code = \"a <- 5     b <- data.frame(x = 1:10)\",   env = list2env(list(a = 5, b = data.frame(x = 1:10))) ) q1 #> <environment: 0x55e20d964df0> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ a: <dbl> [L] #> ‚Ä¢ b: <df[,1]> [L]"},{"path":"https://insightsengineering.github.io/teal.code/reference/teal.code-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.code: Code storage and execution class for teal applications ‚Äî teal.code-package","title":"teal.code: Code storage and execution class for teal applications ‚Äî teal.code-package","text":"teal.code package contains functionalities can used store execute R calls. qenv class allows create teal module returns code reproduce application outputs.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/teal.code-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.code: Code storage and execution class for teal applications ‚Äî teal.code-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com Authors: Pawel Rucki pawel.rucki@roche.com Nikolas Burkoff nikolas.burkoff@roche.com Mahmoud Hallal mahmoud.hallal@roche.com Maciej Nasinski maciej.nasinski@contractors.roche.com Konrad Pagacz konrad.pagacz@contractors.roche.com Junlue Zhao zhaoj88@gene.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/within.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate expression in qenv object. ‚Äî within.qenv","title":"Evaluate expression in qenv object. ‚Äî within.qenv","text":"Convenience function evaluating inline code inside environment qenv.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/within.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate expression in qenv object. ‚Äî within.qenv","text":"","code":"# S3 method for qenv within(data, expr, ...)"},{"path":"https://insightsengineering.github.io/teal.code/reference/within.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate expression in qenv object. ‚Äî within.qenv","text":"data qenv object expr expression evaluate ... name:value pairs inject values expr","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/within.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate expression in qenv object. ‚Äî within.qenv","text":"Returns qenv object expr evaluated. evaluation raises error, qenv.error returned.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/within.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate expression in qenv object. ‚Äî within.qenv","text":"wrapper eval_code provides simplified way passing code evaluation. accepts inline expressions (simple compound) allows injecting values expr ... argument: name:value pairs passed ..., name expr replaced value.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/within.html","id":"using-language-objects","dir":"Reference","previous_headings":"","what":"Using language objects","title":"Evaluate expression in qenv object. ‚Äî within.qenv","text":"Passing language objects expr generally intended can achieved .call. single expressions work substitution available. See examples.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/within.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate expression in qenv object. ‚Äî within.qenv","text":"","code":"q <- new_qenv()  # execute code q <- within(q, {   i <- iris }) q <- within(q, {   m <- mtcars   f <- faithful }) q #> <environment: 0x55e207d8b5d0> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ f: <df[,2]> [L] #> ‚Ä¢ i: <df[,5]> [L] #> ‚Ä¢ m: <df[,11]> [L] get_code(q) #> [1] \"i <- iris\"     \"m <- mtcars\"   \"f <- faithful\"  # inject values into code q <- new_qenv() q <- within(q, i <- iris) within(q, print(dim(subset(i, Species == \"virginica\")))) #> [1] 50  5 #> <environment: 0x55e20da6de50> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] within(q, print(dim(subset(i, Species == species)))) # fails #> <qenv.error: object 'species' not found  #>  when evaluating qenv code: #> print(dim(subset(i, Species == species)))> within(q, print(dim(subset(i, Species == species))), species = \"versicolor\") #> [1] 50  5 #> <environment: 0x55e20be65f90> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] species_external <- \"versicolor\" within(q, print(dim(subset(i, Species == species))), species = species_external) #> [1] 50  5 #> <environment: 0x55e20c0d62e8> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L]  # pass language objects expr <- expression(i <- iris, m <- mtcars) within(q, expr) # fails #> <qenv.error: object 'expr' not found  #>  when evaluating qenv code: #> expr> do.call(within, list(q, expr)) #> <environment: 0x55e208eb69b8> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] #> ‚Ä¢ m: <df[,11]> [L]  exprlist <- list(expression(i <- iris), expression(m <- mtcars)) within(q, exprlist) # fails #> <qenv.error: object 'exprlist' not found  #>  when evaluating qenv code: #> exprlist> do.call(within, list(q, do.call(c, exprlist))) #> <environment: 0x55e20b319540> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] #> ‚Ä¢ m: <df[,11]> [L]"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"tealcode-041","dir":"Changelog","previous_headings":"","what":"teal.code 0.4.1","title":"teal.code 0.4.1","text":"CRAN release: 2023-09-12","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-4-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.4.1","text":"Fix NEWS Updated usage installation instructions README. Updated phrasing qenv vignette. Specified minimal version package dependencies. Added within method qenv convenient passing inline code eval_code.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"breaking-change-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking Change","title":"teal.code 0.4.0","text":"chunks removed. new qenv object used instead. See new qenv vignette package details.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-4-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.4.0","text":"dev_suppress added suppress rendering plots IDE.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"major-breaking-change-0-3-0","dir":"Changelog","previous_headings":"","what":"Major breaking change","title":"teal.code 0.3.0","text":"chunks now deprecated removed package future release. new qenv object used instead. See new qenv vignette package details.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.code 0.3.0","text":"Added concat method qenv offer concatenate functionality.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-2-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.2.0","text":"Removed %<chunk% operator. Please use chunks_push instead.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"enhancements-0-1-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.code 0.1.1","text":"New wrapper function chunks_deep_clone make deep (.e.¬†completely independent) copy chunks objects. Added new wrapper chunks_new chunks initialization.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-1-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.1.1","text":"Added template pkgdown site. Added vignette explain advanced features chunks object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"tealcode-010","dir":"Changelog","previous_headings":"","what":"teal.code 0.1.0","title":"teal.code 0.1.0","text":"Initial release teal.code, package code storage execution class teal applications.","code":""}]
