[{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.code/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.code/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"introduction-to-qenv","dir":"Articles","previous_headings":"","what":"Introduction to qenv","title":"qenv","text":"qenv R object contains code environment can used create reproducible outputs.","code":""},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"initialization","dir":"Articles","previous_headings":"Introduction to qenv","what":"Initialization","title":"qenv","text":"qenv() function serves gateway create initial qenv object:","code":"library(teal.code)  # create a new qenv object empty_qenv <- qenv() print(empty_qenv) ## <environment: 0x55571238a4c0> [L] ## Parent: <environment: package:teal.code>"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"qenv-basic-usage","dir":"Articles","previous_headings":"Introduction to qenv","what":"qenv basic usage","title":"qenv","text":"eval_code() function executes code within qenv environment, yielding new qenv object output. result can achieved within method qenv class. extract objects qenv, use [[; particularly useful displaying shiny app. can retrieve code used generate qenv using get_code() function.","code":"library(magrittr)  # evaluate code in qenv my_qenv <- eval_code(empty_qenv, \"x <- 2\") print(my_qenv) ## <environment: 0x555713720318> [L] ## Parent: <environment: package:magrittr> ## Bindings: ## ‚Ä¢ x: <dbl> [L] get_env(my_qenv) ## <environment: 0x555713720318> q1 <- eval_code(my_qenv, \"y <- x * 2\") %>% eval_code(\"z <- y * 2\")  # my_qenv still contains only x print(my_qenv) ## <environment: 0x555713720318> [L] ## Parent: <environment: package:magrittr> ## Bindings: ## ‚Ä¢ x: <dbl> [L] ls(get_env(my_qenv)) ## [1] \"x\" # q1 contains x, y and z print(q1) ## <environment: 0x5557124628e0> [L] ## Parent: <environment: package:magrittr> ## Bindings: ## ‚Ä¢ x: <dbl> [L] ## ‚Ä¢ y: <dbl> [L] ## ‚Ä¢ z: <dbl> [L] ls(get_env(q1)) ## [1] \"x\" \"y\" \"z\" q2 <- within(my_qenv, y <- x * 2) %>% within(z <- y * 2) print(q2) ## <environment: 0x5557134dbec0> [L] ## Parent: <environment: package:magrittr> ## Bindings: ## ‚Ä¢ x: <dbl> [L] ## ‚Ä¢ y: <dbl> [L] ## ‚Ä¢ z: <dbl> [L] print(q2[[\"y\"]]) ## [1] 4 cat(get_code(q2)) ## x <- 2 ## y <- x * 2 ## z <- y * 2"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"substitutions","dir":"Articles","previous_headings":"Introduction to qenv","what":"Substitutions","title":"qenv","text":"cases, one may want substitute elements code evaluation. Consider case subset iris defined input value. convenient way pass code substitution use within method. See ?qenv details.","code":"q <- qenv() q <- eval_code(q, quote(i <- subset(iris, Species == \"setosa\"))) q <- eval_code(q, substitute(   ii <- subset(iris, Species == species),   env = list(species = \"versicolor\") )) input_value <- \"virginica\" q <- eval_code(q, substitute(   iii <- subset(iris, Species == species),   env = list(species = input_value) ))  summary(q[[\"i\"]]$Species) ##     setosa versicolor  virginica  ##         50          0          0 summary(q[[\"ii\"]]$Species) ##     setosa versicolor  virginica  ##          0         50          0 summary(q[[\"iii\"]]$Species) ##     setosa versicolor  virginica  ##          0          0         50 qq <- qenv() qq <- within(qq, i <- subset(iris, Species == \"setosa\")) qq <- within(qq, ii <- subset(iris, Species == species), species = \"versicolor\") input_value <- \"virginica\" qq <- within(qq, iii <- subset(iris, Species == species), species = input_value)  summary(qq[[\"i\"]]$Species) ##     setosa versicolor  virginica  ##         50          0          0 summary(qq[[\"ii\"]]$Species) ##     setosa versicolor  virginica  ##          0         50          0 summary(qq[[\"iii\"]]$Species) ##     setosa versicolor  virginica  ##          0          0         50"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"combining-qenv-objects","dir":"Articles","previous_headings":"Introduction to qenv","what":"Combining qenv objects","title":"qenv","text":"Given pair qenv objects, may able ‚Äújoin‚Äù , creating new qenv object encompassing union environments, along requisite code reproduction: feasibility joining qenv objects hinges contents environments code‚Äôs order. Refer function documentation details.","code":"common_q <- eval_code(qenv(), quote(x <- 1))  x_q <- eval_code(common_q, quote(y <- 5)) y_q <- eval_code(common_q, quote(z <- 5))  join_q <- join(x_q, y_q)  print(join_q) ## <environment: 0x5557103b81f0> ## Parent: <environment: package:magrittr> ## Bindings: ## ‚Ä¢ x: <dbl> ## ‚Ä¢ y: <dbl> ## ‚Ä¢ z: <dbl> ls(get_env(join_q)) ## [1] \"x\" \"y\" \"z\""},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"warnings-and-messages-in-qenv-objects","dir":"Articles","previous_headings":"Introduction to qenv","what":"Warnings and messages in qenv objects","title":"qenv","text":"cases warnings messages arise evaluating code within qenv environment, captured stored within qenv object. Access messages warnings using @ operator. particular line code doesn‚Äôt trigger warnings messages, corresponding message/warning value empty string. Additionally, helper function, get_warnings(), available generate formatted string comprising warnings code responsible generating . returns NULL warnings present.","code":"q_message <- eval_code(qenv(), quote(message(\"this is a message\"))) q_message@messages ## [1] \"> this is a message\\n\" q_warning <- eval_code(qenv(), quote(warning(\"and this is a warning\"))) q_warning@warnings ## [1] \"> and this is a warning\\n\" q_message@warnings ## [1] \"\" q_warning@messages ## [1] \"\""},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"utilizing-qenv-inside-shiny-applications","dir":"Articles","previous_headings":"","what":"Utilizing qenv inside shiny applications","title":"qenv","text":"functions can seamlessly integrated shiny applications produce reproducible outputs. example , rcode section showcases code employed generating output. employing qenv evaluate code, error occur, object type qenv.error generated. object can utilized wherever qenv object used, alleviating need code alterations handle errors. Select error_option example witness qenv error handling action.","code":"library(shiny) library(magrittr) # create an initial qenv with the data in data_q <- qenv() %>% eval_code(\"iris_data <- iris\")  ui <- fluidPage(   radioButtons(     \"option\", \"Choose a column to plot:\",     c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\", \"error_option\")   ),   verbatimTextOutput(\"rcode\"),   plotOutput(\"plot\") )  server <- function(input, output, session) {   # create a qenv containing the reproducible output   output_q <- reactive({     req(input$option)     eval_code(       data_q,       bquote(p <- hist(iris_data[, .(input$option)]))     )   })    # display output   output$plot <- renderPlot(output_q()[[\"p\"]])   # display code   output$rcode <- renderText(get_code(output_q())) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.code/articles/qenv.html","id":"qenv-and-teal-applications","dir":"Articles","previous_headings":"","what":"qenv and teal applications","title":"qenv","text":"versatile qenv object can seamlessly integrate teal modules. Explore teal vignette Creating Custom Modules detailed guidance.","code":""},{"path":"https://insightsengineering.github.io/teal.code/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Aleksander Chlebowski. Author. Marcin Kosinski. Author. Pawel Rucki. Author. Nikolas Burkoff. Author. Mahmoud Hallal. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Junlue Zhao. Author. Chendi Liao. Reviewer. Dony Unardi. Reviewer. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.code/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Chlebowski , Kosinski M, Rucki P, Burkoff N, Hallal M, Nasinski M, Pagacz K, Zhao J (2024). teal.code: Code Storage Execution Class 'teal' Applications. R package version 0.5.0,  https://github.com/insightsengineering/teal.code, https://insightsengineering.github.io/teal.code/.","code":"@Manual{,   title = {teal.code: Code Storage and Execution Class for 'teal' Applications},   author = {Dawid Kaledkowski and Aleksander Chlebowski and Marcin Kosinski and Pawel Rucki and Nikolas Burkoff and Mahmoud Hallal and Maciej Nasinski and Konrad Pagacz and Junlue Zhao},   year = {2024},   note = {R package version 0.5.0,  https://github.com/insightsengineering/teal.code},   url = {https://insightsengineering.github.io/teal.code/}, }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Code Storage and Execution Class for teal Applications","text":"teal.code R library providing tools store code execution environment associated . features include: qenv class tracking code storing variables integrates well shiny reactive expressions use shiny applications whose outputs require reproducibility (.e. code used application can retrieved rerun) ability chain join qenv objects together provide fine-grained control executed code automatic handling errors warnings encountered executed code","code":""},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Code Storage and Execution Class for teal Applications","text":"Alternatively, might want use development version available r-universe.","code":"# stable versions install.packages('teal.code')  # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.code@*release\") # beta versions install.packages('teal.code', repos = c('https://pharmaverse.r-universe.dev', getOption('repos')))  # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.code\")"},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Code Storage and Execution Class for teal Applications","text":"understand use package, please refer Getting Started article, provides multiple examples code implementation. showcase example usage","code":"library(teal.code) my_qenv <- qenv() |> eval_code(\"x <- 5\") my_qenv #> <environment: 0x00000225cc85c7a0> [L] #> Parent: <environment: package:teal.code> #> Bindings: #> ‚Ä¢ x: <dbl> [L] get_env(my_qenv) #> <environment: 0x00000225cc85c7a0> ls(get_env(my_qenv)) #> [1] \"x\" qenv_2 <- eval_code(my_qenv, \"y <- x * 2\") |> eval_code(\"z <- y * 2\") qenv_2 #> <environment: 0x00000225ca866d68> [L] #> Parent: <environment: package:teal.code> #> Bindings: #> ‚Ä¢ x: <dbl> [L] #> ‚Ä¢ y: <dbl> [L] #> ‚Ä¢ z: <dbl> [L] get_env(qenv_2) #> <environment: 0x00000225ca866d68> ls(get_env(qenv_2)) #> [1] \"x\" \"y\" \"z\" qenv_2[[\"y\"]] #> [1] 10 cat(get_code(qenv_2)) #> x <- 5 #> y <- x * 2 #> z <- y * 2"},{"path":"https://insightsengineering.github.io/teal.code/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Code Storage and Execution Class for teal Applications","text":"encounter bug feature request, please file issue. questions, discussions, updates, use teal channel pharmaverse slack workspace.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate two qenv objects ‚Äî concat","title":"Concatenate two qenv objects ‚Äî concat","text":"Combine two qenv objects simple concatenate environments code.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate two qenv objects ‚Äî concat","text":"","code":"concat(x, y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate two qenv objects ‚Äî concat","text":"x (qenv) y (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate two qenv objects ‚Äî concat","text":"qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concatenate two qenv objects ‚Äî concat","text":"recommend use join method stricter control case x y contain duplicated bindings code. RHS argument content priority LHS one.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/concat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate two qenv objects ‚Äî concat","text":"","code":"q <- qenv() q1 <- eval_code(q, expression(iris1 <- iris, mtcars1 <- mtcars)) q2 <- q1 q1 <- eval_code(q1, \"iris2 <- iris\") q2 <- eval_code(q2, \"mtcars2 <- mtcars\") qq <- concat(q1, q2) get_code(qq) #> [1] \"iris1 <- iris\\nmtcars1 <- mtcars\\niris2 <- iris\\niris1 <- iris\\nmtcars1 <- mtcars\\nmtcars2 <- mtcars\""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"function opens PDF graphics device using grDevices::pdf suppress plot display IDE. purpose function avoid opening graphic devices directly IDE.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"","code":"dev_suppress(x)"},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"x lazy binding generates plot(s)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"return value, called side effects.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"function uses base::.exit ensure PDF graphics device closed (using grDevices::dev.) function exits, regardless whether exits normally due error. necessary clean graphics device properly avoid potential issues.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dev_suppress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppresses plot display in the IDE by opening a PDF graphics device ‚Äî dev_suppress","text":"","code":"dev_suppress(plot(1:10))"},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":null,"dir":"Reference","previous_headings":"","what":"If two qenv can be joined ‚Äî .check_joinable","title":"If two qenv can be joined ‚Äî .check_joinable","text":"Checks two qenv objects can combined. information, please see join","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If two qenv can be joined ‚Äî .check_joinable","text":"","code":".check_joinable(x, y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"If two qenv can be joined ‚Äî .check_joinable","text":"x (qenv) y (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/dot-check_joinable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"If two qenv can be joined ‚Äî .check_joinable","text":"TRUE able join character used print error message.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Access environment included in qenv ‚Äî get_env","title":"Access environment included in qenv ‚Äî get_env","text":"access environment included qenv@env allows e.g. list object names included qenv@env slot.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access environment included in qenv ‚Äî get_env","text":"","code":"get_env(object)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access environment included in qenv ‚Äî get_env","text":"object (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access environment included in qenv ‚Äî get_env","text":"environment stored qenv@env slot.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access environment included in qenv ‚Äî get_env","text":"","code":"q <- qenv() q1 <- within(q, {   a <- 5   b <- data.frame(x = 1:10) }) get_env(q1) #> <environment: 0x55bd4921a038> ls(get_env(q1)) #> [1] \"a\" \"b\""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Get object from qenv ‚Äî get_var","title":"Get object from qenv ‚Äî get_var","text":"Retrieve variables qenv environment.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get object from qenv ‚Äî get_var","text":"","code":"get_var(object, var)  # S4 method for qenv [[(x, i)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get object from qenv ‚Äî get_var","text":"object, x (qenv) var, (character(1)) variable name.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get object from qenv ‚Äî get_var","text":"value required variable (var) within qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get object from qenv ‚Äî get_var","text":"","code":"q <- qenv() q1 <- eval_code(q, code = quote(a <- 1)) q2 <- eval_code(q1, code = \"b <- a\") get_var(q2, \"b\") #> [1] 1 q2[[\"b\"]] #> [1] 1"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get warnings from qenv object ‚Äî get_warnings","title":"Get warnings from qenv object ‚Äî get_warnings","text":"Retrieve warnings raised code evaluation qenv.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get warnings from qenv object ‚Äî get_warnings","text":"","code":"get_warnings(object)"},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get warnings from qenv object ‚Äî get_warnings","text":"object (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get warnings from qenv object ‚Äî get_warnings","text":"character containing warning information NULL warnings.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/get_warnings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get warnings from qenv object ‚Äî get_warnings","text":"","code":"data_q <- qenv() data_q <- eval_code(data_q, \"iris_data <- iris\") warning_qenv <- eval_code(   data_q,   bquote(p <- hist(iris_data[, .(\"Sepal.Length\")], ff = \"\")) )  cat(get_warnings(warning_qenv)) #> ~~~ Warnings ~~~ #>  #> > \"ff\" is not a graphical parameter #> > \"ff\" is not a graphical parameter #> > \"ff\" is not a graphical parameter #> > \"ff\" is not a graphical parameter #> when running code: #> p <- hist(iris_data[, \"Sepal.Length\"], ff = \"\") #>  #> ~~~ Trace ~~~ #>  #> iris_data <- iris #> p <- hist(iris_data[, \"Sepal.Length\"], ff = \"\")"},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join qenv objects ‚Äî join","title":"Join qenv objects ‚Äî join","text":"Checks merges two qenv objects one qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join qenv objects ‚Äî join","text":"","code":"join(x, y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join qenv objects ‚Äî join","text":"x (qenv) y (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join qenv objects ‚Äî join","text":"qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join qenv objects ‚Äî join","text":"common code start qenvs placed start joined qenv. allows consistent behavior joining qenvs share common ancestor. See example. situations join() properly performed, three scenarios: qenv objects contain object name identical. Example:   example, mtcars1 object exists x y objects content identical. mtcars1 x qenv object columns mtcars1 y qenv object (one column). join() look identical @id values qenv objects. index position @ids must determine evaluation order. Otherwise, join() throw error message. Example:   error occurs index position identical @id two objects . usage temporary variable code expression cause join() fail. Example:   join() fails provide proper result temporary variable exists objects different value. fix , can set <- NULL code expression objects.","code":"x <- eval_code(qenv(), expression(mtcars1 <- mtcars)) y <- eval_code(qenv(), expression(mtcars1 <- mtcars['wt']))  z <- join(x, y) # Error message will occur common_q <- eval_code(qenv(), expression(v <- 1)) x <- eval_code(   common_q,   \"x <- v\" ) y <- eval_code(   common_q,   \"y <- v\" ) z <- eval_code(   y,   \"z <- v\" ) q <- join(x, y) join_q <- join(q, z) # Error message will occur  # Check the order of evaluation based on the id slot shared_ids <- intersect(q@id, z@id) match(shared_ids, q@id) # Output: 1 3 match(shared_ids, z@id) # Output: 1 2 common_q <- qenv() x <- eval_code(   common_q,   \"x <- numeric(0)    for (i in 1:2) {      x <- c(x, i)    }\" ) y <- eval_code(   common_q,   \"y <- numeric(0)    for (i in 1:3) {      y <- c(y, i)    }\" ) q <- join(x,y) # Error message will occur  # Check the value of temporary variable i in both objects x@env$i # Output: 2 y@env$i # Output: 3 common_q <- qenv() x <- eval_code(   common_q,   \"x <- numeric(0)    for (i in 1:2) {      x <- c(x, i)    }    # dummy i variable to fix it    i <- NULL\" ) y <- eval_code(   common_q,   \"y <- numeric(0)    for (i in 1:3) {      y <- c(y, i)    }    # dummy i variable to fix it    i <- NULL\" ) q <- join(x,y)"},{"path":"https://insightsengineering.github.io/teal.code/reference/join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join qenv objects ‚Äî join","text":"","code":"q <- qenv() q1 <- eval_code(q, expression(iris1 <- iris, mtcars1 <- mtcars)) q2 <- q1 q1 <- eval_code(q1, \"iris2 <- iris\") q2 <- eval_code(q2, \"mtcars2 <- mtcars\") qq <- join(q1, q2) get_code(qq) #> [1] \"iris1 <- iris\\nmtcars1 <- mtcars\\niris2 <- iris\\nmtcars2 <- mtcars\"  common_q <- eval_code(q, quote(x <- 1)) y_q <- eval_code(common_q, quote(y <- x * 2)) z_q <- eval_code(common_q, quote(z <- x * 3)) join_q <- join(y_q, z_q) # get_code only has \"x <- 1\" occurring once get_code(join_q) #> [1] \"x <- 1\\ny <- x * 2\\nz <- x * 3\""},{"path":"https://insightsengineering.github.io/teal.code/reference/lang2calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate calls ‚Äî lang2calls","title":"Separate calls ‚Äî lang2calls","text":"Converts language object lists language objects list simple calls.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/lang2calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate calls ‚Äî lang2calls","text":"","code":"lang2calls(x)"},{"path":"https://insightsengineering.github.io/teal.code/reference/lang2calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate calls ‚Äî lang2calls","text":"x language object list thereof","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/lang2calls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate calls ‚Äî lang2calls","text":"Given call, expression, list calls list expressions, returns list calls. Symbols atomic vectors (may get mixed list) returned wrapped list.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/lang2calls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate calls ‚Äî lang2calls","text":"","code":"# use non-exported function from teal.code lang2calls <- getFromNamespace(\"lang2calls\", \"teal.code\") expr <- expression(   i <- iris,   m <- mtcars ) lang2calls(expr) #> [[1]] #> i <- iris #>  #> [[2]] #> m <- mtcars #>"},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproducible class with environment and code ‚Äî qenv-class","title":"Reproducible class with environment and code ‚Äî qenv-class","text":"Reproducible class environment code.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Reproducible class with environment and code ‚Äî qenv-class","text":"code (character) representing code necessary reproduce environment env (environment) environment content generated evaluation code slot. id (integer) random identifier code element make sure uniqueness joining. warnings (character) warnings output evaluating code messages (character) messages output evaluating code","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv.html","id":null,"dir":"Reference","previous_headings":"","what":"Code tracking with qenv object ‚Äî qenv","title":"Code tracking with qenv object ‚Äî qenv","text":"Create qenv object evaluate code track code history.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code tracking with qenv object ‚Äî qenv","text":"","code":"qenv()  new_qenv(env = new.env(parent = parent.env(.GlobalEnv)), code = character())  eval_code(object, code)  get_code(object, deparse = TRUE, ...)  # S3 method for qenv within(data, expr, ...)"},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code tracking with qenv object ‚Äî qenv","text":"env (environment) Environment result code evaluation. code (character language) code evaluate. character, comments retained. object (qenv) deparse (logical(1)) flag specifying whether return code character expression. ... see Details data (qenv) expr (expression) evaluate. Must inline code, see Using language objects...","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code tracking with qenv object ‚Äî qenv","text":"qenv new_qenv return qenv object. eval_code returns qenv object expr evaluated qenv.error evaluation fails. get_code returns traced code (@code slot) form specified deparse. within returns qenv object expr evaluated qenv.error evaluation fails.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Code tracking with qenv object ‚Äî qenv","text":"qenv() instantiates qenv empty environment. changes must made evaluating code eval_code within, thereby ensuring reproducibility. new_qenv() ( recommended) can instantiate qenv object data environment code registered. eval_code evaluates given code qenv environment appends code slot. Thus, qenv instantiated empty, contents environment always result stored code. get_code retrieves code stored qenv. ... passes arguments methods. within convenience function evaluating inline code inside environment qenv. method base generic wraps eval_code provide simplified way passing code. within accepts inline expressions (simple compound) allows injecting values expr ... argument: name:value pairs passed ..., name expr replaced value.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv.html","id":"using-language-objects-with-within","dir":"Reference","previous_headings":"","what":"Using language objects with within","title":"Code tracking with qenv object ‚Äî qenv","text":"Passing language objects expr generally intended can achieved .call. single expressions work substitution available. See examples.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/qenv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Code tracking with qenv object ‚Äî qenv","text":"","code":"# create empty qenv qenv() #> <environment: 0x55bd48ff1e20> [L] #> Parent: <environment: devtools_shims>  # create qenv with data and code (deprecated) new_qenv(env = list2env(list(a = 1)), code = quote(a <- 1)) #> Warning: `new_qenv()` was deprecated in teal.code 0.5.0. #> ‚Ñπ Please use `qenv()` instead. #> <environment: 0x55bd465c89c8> [L] #> Parent: <environment: devtools_shims> #> Bindings: #> ‚Ä¢ a: <dbl> [L] new_qenv(env = list2env(list(a = 1)), code = parse(text = \"a <- 1\", keep.source = TRUE)) #> Warning: `new_qenv()` was deprecated in teal.code 0.5.0. #> ‚Ñπ Please use `qenv()` instead. #> <environment: 0x55bd4914d780> [L] #> Parent: <environment: devtools_shims> #> Bindings: #> ‚Ä¢ a: <dbl> [L] new_qenv(env = list2env(list(a = 1)), code = \"a <- 1\") #> Warning: `new_qenv()` was deprecated in teal.code 0.5.0. #> ‚Ñπ Please use `qenv()` instead. #> <environment: 0x55bd4acfcb40> [L] #> Parent: <environment: devtools_shims> #> Bindings: #> ‚Ä¢ a: <dbl> [L]  # evaluate code in qenv q <- qenv() q <- eval_code(q, \"a <- 1\") q <- eval_code(q, quote(library(checkmate))) q <- eval_code(q, expression(assert_number(a)))  # retrieve code get_code(q) #> [1] \"a <- 1\\nlibrary(checkmate)\\nassert_number(a)\" get_code(q, deparse = FALSE) #> expression({ #> a <- 1 #> library(checkmate) #> assert_number(a) #> })  # evaluate code using within q <- qenv() q <- within(q, {   i <- iris }) q <- within(q, {   m <- mtcars   f <- faithful }) q #> <environment: 0x55bd49f844c8> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ f: <df[,2]> [L] #> ‚Ä¢ i: <df[,5]> [L] #> ‚Ä¢ m: <df[,11]> [L] get_code(q) #> [1] \"i <- iris\\nm <- mtcars\\nf <- faithful\"  # inject values into code q <- qenv() q <- within(q, i <- iris) within(q, print(dim(subset(i, Species == \"virginica\")))) #> [1] 50  5 #> <environment: 0x55bd49709d98> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] within(q, print(dim(subset(i, Species == species)))) # fails #> <qenv.error: object 'species' not found  #>  when evaluating qenv code: #> print(dim(subset(i, Species == species)))> within(q, print(dim(subset(i, Species == species))), species = \"versicolor\") #> [1] 50  5 #> <environment: 0x55bd48f81058> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] species_external <- \"versicolor\" within(q, print(dim(subset(i, Species == species))), species = species_external) #> [1] 50  5 #> <environment: 0x55bd468acbd0> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L]  # pass language objects expr <- expression(i <- iris, m <- mtcars) within(q, expr) # fails #> <qenv.error: object 'expr' not found  #>  when evaluating qenv code: #> expr> do.call(within, list(q, expr)) #> <environment: 0x55bd4c624500> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] #> ‚Ä¢ m: <df[,11]> [L]  exprlist <- list(expression(i <- iris), expression(m <- mtcars)) within(q, exprlist) # fails #> <qenv.error: object 'exprlist' not found  #>  when evaluating qenv code: #> exprlist> do.call(within, list(q, do.call(c, exprlist))) #> <environment: 0x55bd4c9ac5d8> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ i: <df[,5]> [L] #> ‚Ä¢ m: <df[,11]> [L]"},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Display qenv object ‚Äî show,qenv-method","title":"Display qenv object ‚Äî show,qenv-method","text":"Prints qenv object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display qenv object ‚Äî show,qenv-method","text":"","code":"# S4 method for qenv show(object)"},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display qenv object ‚Äî show,qenv-method","text":"object (qenv)","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display qenv object ‚Äî show,qenv-method","text":"object, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.code/reference/show-qenv-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display qenv object ‚Äî show,qenv-method","text":"","code":"q <- qenv() q1 <- eval_code(q, expression(a <- 5, b <- data.frame(x = 1:10))) q1 #> <environment: 0x55bd4c69dca8> [L] #> Parent: <environment: package:checkmate> #> Bindings: #> ‚Ä¢ a: <dbl> [L] #> ‚Ä¢ b: <df[,1]> [L]"},{"path":"https://insightsengineering.github.io/teal.code/reference/teal.code-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.code: Code storage and execution class for teal applications ‚Äî teal.code-package","title":"teal.code: Code storage and execution class for teal applications ‚Äî teal.code-package","text":"teal.code package contains functionalities can used store execute R calls. qenv class allows create teal module returns code reproduce application outputs.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/reference/teal.code-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.code: Code storage and execution class for teal applications ‚Äî teal.code-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com Authors: Aleksander Chlebowski aleksander.chlebowski@contractors.roche.com Marcin Kosinski marcin.kosinski.mk1@roche.com Pawel Rucki pawel.rucki@roche.com Nikolas Burkoff nikolas.burkoff@roche.com Mahmoud Hallal mahmoud.hallal@roche.com Maciej Nasinski maciej.nasinski@contractors.roche.com Konrad Pagacz konrad.pagacz@contractors.roche.com Junlue Zhao zhaoj88@gene.com contributors: Chendi Liao chendi.liao@roche.com [reviewer] Dony Unardi unardid@gene.com [reviewer] F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"tealcode-050","dir":"Changelog","previous_headings":"","what":"teal.code 0.5.0","title":"teal.code 0.5.0","text":"CRAN release: 2024-01-11","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"breaking-change-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking Change","title":"teal.code 0.5.0","text":"qenv objects now created qenv() rather new_qenv(). new constructor always creates empty object. new_qenv now deprecated.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-5-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.5.0","text":"Exported qenv class package. @code field qenv class now holds character, expression. get_code method returns single concatenated string code. Added within support qenv.error class. Added get_env method allows extract environment stored qenv@env slot.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"tealcode-041","dir":"Changelog","previous_headings":"","what":"teal.code 0.4.1","title":"teal.code 0.4.1","text":"CRAN release: 2023-09-12","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-4-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.4.1","text":"Fix NEWS Updated usage installation instructions README. Updated phrasing qenv vignette. Specified minimal version package dependencies. Added within method qenv convenient passing inline code eval_code.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"breaking-change-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking Change","title":"teal.code 0.4.0","text":"chunks removed. new qenv object used instead. See new qenv vignette package details.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-4-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.4.0","text":"dev_suppress added suppress rendering plots IDE.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"major-breaking-change-0-3-0","dir":"Changelog","previous_headings":"","what":"Major breaking change","title":"teal.code 0.3.0","text":"chunks now deprecated removed package future release. new qenv object used instead. See new qenv vignette package details.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.code 0.3.0","text":"Added concat method qenv offer concatenate functionality.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-2-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.2.0","text":"Removed %<chunk% operator. Please use chunks_push instead.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"enhancements-0-1-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.code 0.1.1","text":"New wrapper function chunks_deep_clone make deep (.e.¬†completely independent) copy chunks objects. Added new wrapper chunks_new chunks initialization.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"miscellaneous-0-1-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.code 0.1.1","text":"Added template pkgdown site. Added vignette explain advanced features chunks object.","code":""},{"path":"https://insightsengineering.github.io/teal.code/news/index.html","id":"tealcode-010","dir":"Changelog","previous_headings":"","what":"teal.code 0.1.0","title":"teal.code 0.1.0","text":"Initial release teal.code, package code storage execution class teal applications.","code":""}]
